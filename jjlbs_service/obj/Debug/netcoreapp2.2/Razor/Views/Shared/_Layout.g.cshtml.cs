#pragma checksum "C:\Users\Administrator\source\repos\jjlbs_serviceNewV2\jjlbs_service\Views\Shared\_Layout.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "244fa063bf0ab74d4f28bf9558aa6d2a8021abbc"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared__Layout), @"mvc.1.0.view", @"/Views/Shared/_Layout.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Shared/_Layout.cshtml", typeof(AspNetCore.Views_Shared__Layout))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Administrator\source\repos\jjlbs_serviceNewV2\jjlbs_service\Views\_ViewImports.cshtml"
using jjlbs_service;

#line default
#line hidden
#line 2 "C:\Users\Administrator\source\repos\jjlbs_serviceNewV2\jjlbs_service\Views\_ViewImports.cshtml"
using jjlbs_service.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"244fa063bf0ab74d4f28bf9558aa6d2a8021abbc", @"/Views/Shared/_Layout.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"388978b18945ee3cd61e73c2f652e11d9e0d0638", @"/Views/_ViewImports.cshtml")]
    public class Views_Shared__Layout : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/font-awesome-4.7.0/css/font-awesome.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/easyui/themes/default/easyui.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/easyui/themes/icon.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/easyui/demo/demo.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/layui-v2.5.4/layui/css/layui.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("media", new global::Microsoft.AspNetCore.Html.HtmlString("all"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/site.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/javascript"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/easyui/jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/easyui/jquery.easyui.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/layui-v2.5.4/layui/layui.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("charset", new global::Microsoft.AspNetCore.Html.HtmlString("utf-8"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", "~/js/site.js", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/easyui/locale/easyui-lang-zh_CN.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 27, true);
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html>\r\n");
            EndContext();
            BeginContext(27, 833, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "244fa063bf0ab74d4f28bf9558aa6d2a8021abbc9856", async() => {
                BeginContext(33, 121, true);
                WriteLiteral("\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>");
                EndContext();
                BeginContext(155, 17, false);
#line 7 "C:\Users\Administrator\source\repos\jjlbs_serviceNewV2\jjlbs_service\Views\Shared\_Layout.cshtml"
      Write(ViewData["Title"]);

#line default
#line hidden
                EndContext();
                BeginContext(172, 14, true);
                WriteLiteral("</title>\r\n    ");
                EndContext();
                BeginContext(186, 76, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "244fa063bf0ab74d4f28bf9558aa6d2a8021abbc10745", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(262, 8, true);
                WriteLiteral("\r\n\r\n    ");
                EndContext();
                BeginContext(270, 81, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "244fa063bf0ab74d4f28bf9558aa6d2a8021abbc12083", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(351, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(357, 71, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "244fa063bf0ab74d4f28bf9558aa6d2a8021abbc13504", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(428, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(434, 69, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "244fa063bf0ab74d4f28bf9558aa6d2a8021abbc14925", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(503, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(509, 77, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "244fa063bf0ab74d4f28bf9558aa6d2a8021abbc16346", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(586, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(592, 47, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "244fa063bf0ab74d4f28bf9558aa6d2a8021abbc17767", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(639, 214, true);
                WriteLiteral("\r\n    <style type=\"text/css\">\r\n        html, body {\r\n             height: 100%;\r\n            margin: 0;\r\n        }\r\n        #container{\r\n            height: 60%;\r\n            margin: 0;\r\n        }\r\n    </style>\r\n\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(860, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(862, 128068, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "244fa063bf0ab74d4f28bf9558aa6d2a8021abbc20137", async() => {
                BeginContext(868, 197, true);
                WriteLiteral("\r\n    <div id=\"header\" class=\"flex sb pd-20 bb-lightblue\">\r\n        <div id=\"logo\">JJLBS-SERVICE</div>\r\n\r\n        <div id=\"selectFilter\">\r\n            <select id=\"selectProvince\" class=\"selectPCC\">");
                EndContext();
                BeginContext(1065, 28, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "244fa063bf0ab74d4f28bf9558aa6d2a8021abbc20737", async() => {
                    BeginContext(1082, 2, true);
                    WriteLiteral("所有");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_9.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1093, 65, true);
                WriteLiteral("</select>\r\n            <select id=\"selectCity\" class=\"selectPCC\">");
                EndContext();
                BeginContext(1158, 28, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "244fa063bf0ab74d4f28bf9558aa6d2a8021abbc22266", async() => {
                    BeginContext(1175, 2, true);
                    WriteLiteral("所有");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_9.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1186, 67, true);
                WriteLiteral("</select>\r\n            <select id=\"selectCounty\" class=\"selectPCC\">");
                EndContext();
                BeginContext(1253, 28, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "244fa063bf0ab74d4f28bf9558aa6d2a8021abbc23797", async() => {
                    BeginContext(1270, 2, true);
                    WriteLiteral("所有");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_9.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1281, 1776, true);
                WriteLiteral(@"</select>
        </div>



        <div class=""tabsMain"">
            <button type=""button"" class=""layui-btn layui-btn-primary layui-btn-radius selectedButton tabBorderLeft bd0"">高德地图</button>
            <button type=""button"" class=""layui-btn layui-btn-primary layui-btn-radius tabBorderRight m0 bd0"">ARCGIS</button>
        </div>

    </div>



    <div id=""footer"" class=""flex"">
        <div id=""tb"" class=""flex sb aic"" style=""padding: 10px;""><span class=""bb-lightblue pb-5px"">小区信息</span><div class=""flex aic""><input type=""text"" placeholder=""输入小区名称检索"" class=""mr-10 pd-5px bd2-lightblue"" /><i id=""inputSearchIcon"" class=""fa fa-search cr-lightblue"" onclick=""searchVillage(this)""></i><div class=""mr-10""><i class=""fa fa-file-o cr-lightblue"" onclick=""newVillage(this)""></i><span> 新建小区</span></div><div><i class=""fa fa-download cr-lightblue"" onclick=""getVillage(this)"" id=""getVillage""></i><span> 更新本地数据</span></div></div></div>
        <div id=""tb2"" class=""flex sb aic"" style=""padding: 10px;""><span class=""bb-l");
                WriteLiteral(@"ightblue pb-5px"">楼宇信息</span><div class=""flex aic""><input type=""text"" placeholder=""输入楼宇号检索"" class=""mr-10 pd-5px bd2-lightblue"" /><i id=""inputSearchIcon"" class=""fa fa-search cr-lightblue"" onclick=""searchBuilding(this)""></i><div class=""mr-10""><i class=""fa fa-file-o cr-lightblue"" onclick=""newBuilding(this)""></i><span> 新建楼宇</span></div><div><i class=""fa fa-download cr-lightblue"" onclick=""getBuilding(this)""></i><span> 更新本地数据</span></div></div></div>

        <table id=""dg"" class=""easyui-datagrid"" style=""width:65%;height:100%""
               iconCls=""icon-save""
               pagination=""true"" data-options=""fitColumns:true,rownumbers:false,singleSelect:true,pagination:true,toolbar:tb,loadMsg:'数据加载中'"">
            <thead>
                <tr>
");
                EndContext();
                BeginContext(3927, 384, true);
                WriteLiteral(@"                </tr>
            </thead>
        </table>
        <table id=""dg2"" class=""easyui-datagrid"" style=""width:35%;height:100%""
               iconCls=""icon-save""
               rownumbers=""true"" pagination=""true"" data-options=""fitColumns:true,rownumbers:false,singleSelect:true,pagination:true,toolbar:tb2,loadMsg:'数据加载中'"">
            <thead>
                <tr>
");
                EndContext();
                BeginContext(4582, 155, true);
                WriteLiteral("                </tr>\r\n            </thead>\r\n        </table>\r\n\r\n    </div>\r\n\r\n\r\n    <div class=\"c\">\r\n        <main role=\"main\" class=\"pb-3\">\r\n            ");
                EndContext();
                BeginContext(4738, 12, false);
#line 87 "C:\Users\Administrator\source\repos\jjlbs_serviceNewV2\jjlbs_service\Views\Shared\_Layout.cshtml"
       Write(RenderBody());

#line default
#line hidden
                EndContext();
                BeginContext(4750, 81, true);
                WriteLiteral("\r\n        </main>\r\n    </div>\r\n\r\n\r\n\r\n    <div id=\"container\"></div>\r\n\r\n\r\n\r\n\r\n    ");
                EndContext();
                BeginContext(4831, 69, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "244fa063bf0ab74d4f28bf9558aa6d2a8021abbc28434", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(4900, 10, true);
                WriteLiteral("\r\n\r\n\r\n    ");
                EndContext();
                BeginContext(4910, 76, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "244fa063bf0ab74d4f28bf9558aa6d2a8021abbc29788", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(4986, 166, true);
                WriteLiteral("\r\n    <script src=\"https://webapi.amap.com/maps?v=1.4.15&key=3cd18e86c129259575068fdb7f2522e0&plugin=AMap.PolyEditor,AMap.Scale,AMap.ControlBar,Map3D\"></script>\r\n    ");
                EndContext();
                BeginContext(5152, 69, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "244fa063bf0ab74d4f28bf9558aa6d2a8021abbc31299", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(5221, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(5227, 62, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "244fa063bf0ab74d4f28bf9558aa6d2a8021abbc32644", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.Src = (string)__tagHelperAttribute_15.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_15);
#line 104 "C:\Users\Administrator\source\repos\jjlbs_serviceNewV2\jjlbs_service\Views\Shared\_Layout.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion = true;

#line default
#line hidden
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(5289, 123545, true);
                WriteLiteral(@"
    <script language=""javascript"">

        var form, layer, element;
        layui.use(['form', 'layedit', 'laydate', 'layer', 'element'], function () {
            form = layui.form
                , layer = layui.layer
                , layedit = layui.layedit
                , laydate = layui.laydate
                , element = layui.element;
        });

        var map = new AMap.Map(""container"", {
            zoom: 17,
            showIndoorMap: false,
            showLabel: true,
            mapStyle: 'amap://styles/light',
            center: [116.401165, 39.902355],
            features: ['bg', 'point', 'road', 'building'],
            viewMode: '3D',
            layers: [
                new AMap.TileLayer({})
            ]
        });
        map.addControl(new AMap.Scale());
        map.addControl(new AMap.ControlBar({
            showZoomBar: false,
            showControlButton: true,
            position: {
                right: '90%',
                top: '100p");
                WriteLiteral(@"x'
            }
        }));

        var mousetool;
        map.plugin([""AMap.MouseTool""], function () {
            mousetool = new AMap.MouseTool(map);
            mousetool.on('draw', function (event) {
                // event.obj 为绘制出来的覆盖物对象
                var polygon = event.obj;
                var bounds = polygon.getPath();
                var list = [];
                bounds.forEach(function (coord) {
                    var lng = coord[""lng""];
                    var lat = coord[""lat""];
                    list.push([lng, lat]);

                })
                document.getElementById('fieldHidden').value = JSON.stringify(list);



            });
        });


        $(""#dg"").datagrid({
            columns: [[
                { field: ""VILLAGE_NAME"", title: ""小区名称"", width: 80, align: ""center"" },
                { field: ""VILLAGE_ADDRESS"", title: ""地址"", width: 80, align: ""center"" },
                { field: ""VILLAGE_REGION"", title: ""区域"", width: 80, align: ""center");
                WriteLiteral(@""" },
                { field: ""VILLAGE_TYPE"", title: ""类型"", width: 80, align: ""center"" },
                { field: ""VILLAGE_COUNT"", title: ""楼宇数"", width: 80, align: ""center"" },
                {
                    field: ""VILLAGE_HASBOUNDS"", title: ""边界"", width: 80, align: ""center"", formatter: function (value, row, index) {
                        if (row.VILLAGE_BOUNDS !== null) {
                            return ""有"";
                        } else {
                            return ""无"";
                        }
                    }
                },
                {
                    field: ""VILLAGE_ACTION"", title: ""操作"", width: 80, align: ""center"", formatter: function (value, row, index) {
                        return `<i class=""fa fa-eye mr-5"" data-lng=""${row.VILLAGE_LNG}"" data-lat=""${row.VILLAGE_LAT}"" data-bounds=""${row.VILLAGE_BOUNDS}"" data-guid=""${row.VILLAGE_ID}"" onclick=""getPoiDetail(this);""></i><i class=""fa fa-edit mr-5"" data-guid=""${row.VILLAGE_ID}"" onclick=""editPoi(this);""><");
                WriteLiteral(@"/i><i class=""fa fa-trash-o"" data-guid=""${row.VILLAGE_ID}"" onclick=""deletePoi(this);""></i>`;
                    }
                },
            ]]
        });

        $(""#dg2"").datagrid({
            columns: [[
                { field: ""BUILDING_NAME"", title: ""楼宇号"", width: 80, align: ""center"" },
                { field: ""BUILDING_ADDRESS"", title: ""详细地址（蓝牌地址码)"", width: 80, align: ""center"" },
                {
                    field: ""BUILDING_ACTION"", title: ""操作"", width: 80, align: ""center"", formatter: function (value, row, index) {

                        return `<i class=\""fa fa-eye mr-5 \"" data-lng=""${row.LNG}"" data-lat=""${row.LAT}"" data-guid=""${row.BUILDING_ID}"" onclick=""getPoiDetail2(this);""></i><i class=\""fa fa-edit mr-5 \"" data-guid=""${row.BUILDING_ID}"" onclick=""editPoi2(this);""></i><i class=\""fa fa-trash-o \"" data-guid=""${row.BUILDING_ID}"" onclick=""deletePoi2(this);""></i>`;
                    }
                }
            ]]
        });

        $('.datagrid-pager.paginatio");
                WriteLiteral(@"n').pagination({
            displayMsg: ""显示 {total} 条 中 {from} 到 {to} 条""
        });

        $('#dg').datagrid({
            onClickRow: function (index, field, value) {
                console.log(field);
                console.log(value);
                map.clearMap();
                map.setZoom(18);
                map.setCenter([field.VILLAGE_LNG, field.VILLAGE_LAT]);
                if (field.VILLAGE_BOUNDS !== null) {
                    var polygon = new AMap.Polygon({
                        strokeColor: ""#2828FF"",
                        fillOpacity: 0,
                        bubble: true,
                        strokeWeight: 1,
                        path: JSON.parse(field.VILLAGE_BOUNDS),
                        map: map
                    });
                    var polylineEditor = new AMap.PolyEditor(map, polygon);
                    polygon.setExtData({ ""editor"": polylineEditor });
                }
                if (field.VILLAGE_COUNT !== 0) {
             ");
                WriteLiteral(@"       $.ajax({
                        type: ""get"",
                        url: `./API/GetBuildings?villageid=${field.VILLAGE_ID}`,
                        contentType: ""application/json; charset=utf-8"",
                        dataType: ""json"",
                        success: function (data) {
                            data.ds.forEach(function (building) {
                                var icon = new AMap.Icon({
                                    size: new AMap.Size(15, 15),
                                    image: './icons/circle.png',  // Icon的图像
                                    imageSize: new AMap.Size(15, 15)
                                });
                                var marker = new AMap.Marker({
                                    position: new AMap.LngLat(building.LNG, building.LAT),   // 经纬度对象，也可以是经纬度构成的一维数组[116.39, 39.9]
                                    title: building.BUILDING_NAME,
                                    icon: icon // 添加 Icon 图标 URL
           ");
                WriteLiteral(@"                     });
                                map.add(marker);
                            });

                        },
                        error: function (item, err) {
                            console.log(err);
                        }
                    });
                    // get related buildings and
                    // use data to draw markers
                }
                $(""#dg2"").datagrid({
                    url: `./API/GetBuildingsPaginated?villageid=${field.VILLAGE_ID}`,
                    method: 'get',
                    onLoadSuccess: function (data) {

                        //$(""#dg"").datagrid('selectRow',0);
                    }
                });


            }
        });

        $('#dg2').datagrid({
            onClickRow: function (index, field, value) {
                map.setZoom(18);
                map.setCenter([field.LNG, field.LAT]);

            }
        });

        function getBuildingNumber(str) {
    ");
                WriteLiteral(@"        var r = str.match(/[a-zA-Z]/);
            if (r !== null) {
                return str.slice(r[""index""]);
            } else {
                var r2 = str.match(/\d/);
                if (r2 !== null) {
                    return str.slice(r2[""index""]);
                } else {
                    return str;
                }
            }
        }

        function getBuilding(e) {
            var selectP = document.getElementById('selectProvince');
            var selectC = document.getElementById('selectCity');
            var selectCT = document.getElementById('selectCounty');
            var province = $(""#selectProvince"").find(""option:selected"").text();
            var city = $(""#selectCity"").find(""option:selected"").text();
            var county = $(""#selectCounty"").find(""option:selected"").text();
            var adcode = document.getElementById('selectCounty').value;
            var region = province + ""/"" + city + ""/"" + county;
            if (province !== ""所有"" && ci");
                WriteLiteral(@"ty !== ""所有"" && county !== ""所有"") {
                $.ajax({
                    type: ""get"",
                    url: `./api/regionexists2?region=${region}`,
                    dataType: ""json"",
                    success: function (data) {
                        if (data[""ds""][0][""COUNT""] === 0) {
                            $.ajax({
                                type: ""get"",
                                url: `https://restapi.amap.com/v3/place/text?key=c7aeb11746b35a92b7b6eee3178a05e4&keywords=&types=190403&city=${adcode}&children=1&offset=5&page=1&extensions=all`,
                                dataType: ""json"",
                                success: function (data) {
                                    var count = data[""count""];
                                    var times = 0;
                                    if (count !== 0) {
                                        //  var piece = 100 / count;
                                        //var currentP = 0;
                    ");
                WriteLiteral(@"                    //var currentCount = 0;
                                        var div = document.createElement('div');
                                        div.setAttribute('id', 'pb');
                                        div.innerHTML += `<div class=""layui-progress layui-progress-big layui-bg-orange"" lay-filter=""pb"" lay-showpercent=""true"""">
  <div class=""layui-progress-bar"" lay-percent=""0%""></div>
</div>`;
                                        document.getElementsByTagName('body')[0].appendChild(div);

                                        var currentP = 10;
                                        //  set your counter to 1

                                        function myLoop() {           //  create a loop function
                                            setTimeout(function () {    //  call a 3s setTimeout when the loop is called
                                                element.progress('pb', `${String(currentP)}%`);


                                          ");
                WriteLiteral(@"      currentP += 10;                    //  increment the counter
                                                if (currentP <= 100) {            //  if the counter < 10, call the loop function
                                                    myLoop();             //  ..  again which will trigger another
                                                } else {
                                                    document.getElementById('pb').remove(); layer.msg(""楼宇已更新"");
                                                }//  ..  setTimeout()
                                            }, 1000)
                                        }

                                        myLoop();
                                        times = Math.ceil(count / 20);
                                        console.log(count);
                                        for (var i = 0; i < times; i++) {
                                            var page = i + 1;
                                            co");
                WriteLiteral(@"nsole.log('this is page' + page);
                                            $.ajax({
                                                type: ""get"",
                                                url: `https://restapi.amap.com/v3/place/text?key=c7aeb11746b35a92b7b6eee3178a05e4&keywords=&types=190403&city=${adcode}&children=1&offset=20&page=${page}&extensions=all`,
                                                dataType: ""json"",
                                                success: function (data2) {
                                                    console.log(data2);
                                                    data2[""pois""].forEach(function (poi) {
                                                        // currentP += piece;
                                                        //currentCount += 1;
                                                        //                                                        console.log(currentCount);

                                           ");
                WriteLiteral(@"             //var cP = `${String(currentP)}%`;
                                                        //element.progress('pb', cP);
                                                        //if (currentCount === Number(count)) {
                                                        //    setTimeout(function () { document.getElementById('pb').remove();layer.msg(""楼宇已更新"");},1500);
                                                        //}
                                                        var region = `${poi[""pname""]}/${poi[""cityname""]}/${poi[""adname""]}`;
                                                        var lnglat = poi[""location""];
                                                        var lng = Number(lnglat.split(',')[0]);
                                                        var lat = Number(lnglat.split(',')[1]);
                                                        var building_number = getBuildingNumber(poi[""name""]);
                                                        $.");
                WriteLiteral(@"ajax({
                                                            type: ""post"",
                                                            url: `./API/CreateBuildings`,
                                                            data: { ""building_code"": poi[""id""], ""building_number"": building_number, ""building_name"": poi[""name""], ""building_address"": poi[""address""], ""building_region"": region, ""building_type"": poi[""type""], ""building_x"": lng, ""building_y"": lat, ""building_lng"": lng, ""building_lat"": lat, ""village_id"": poi[""parent""], ""source"": ""1"" },
                                                            dataType: ""json"",
                                                            success: function (data) {
                                                                if (data.length !== 0) {
                                                                    console.log('error');
                                                                } else {
                                              ");
                WriteLiteral(@"                      //document.getElementsByClassName(""modalSmall"")[0].remove();
                                                                    console.log('inserted');
                                                                    //$('#dg').datagrid('insertRow', {
                                                                    //    index: 0,
                                                                    //    row: {
                                                                    //        village_name: village_name,
                                                                    //        village_address: village_address,
                                                                    //        village_region: village_region,
                                                                    //        village_type: village_type
                                                                    //    }
                                                             ");
                WriteLiteral(@"       //});


                                                                }
                                                            },
                                                            error: function (item, err) {
                                                                console.log(err);
                                                            }
                                                        });
                                                        //var parent = poi[""parent""];
                                                        //var village_id = """";
                                                        //                            $.ajax({
                                                        //    type: ""get"",
                                                        //    url: `./api/getBuildingVillageId?code=${parent}`,
                                                        //    dataType: ""json"",
                                            ");
                WriteLiteral(@"            //    success: function (data3) {
                                                        //        if (data3 !== ""404"") {
                                                        //            if (data3[""ds""] !== undefined) {
                                                        //                if (data3[""ds""].length !== 0) {
                                                        //                    village_id = data3[""ds""][0];
                                                        //                }
                                                        //            }

                                                        //        }

                                                        //        console.log(data3);
                                                        //        $.ajax({
                                                        //                type: ""post"",
                                                        //                url: `./API/CreateB");
                WriteLiteral(@"uildings`,
                                                        //                data: { ""building_code"":poi[""id""],""building_number"": building_number, ""building_name"": poi[""name""], ""building_address"": poi[""address""], ""building_region"": region, ""building_type"": poi[""type""], ""building_x"":lng,""building_y"":lat,""building_lng"":lng,""building_lat"":lat,""village_id"":village_id,""source"": ""1"" },
                                                        //                dataType: ""json"",
                                                        //                success: function (data) {
                                                        //                    if (data.length !== 0) {
                                                        //                        console.log('error');
                                                        //                    } else {
                                                        //                        //document.getElementsByClassName(""modalSmall"")[0].remove");
                WriteLiteral(@"();
                                                        //                        console.log('inserted');
                                                        //                        //$('#dg').datagrid('insertRow', {
                                                        //                        //    index: 0,
                                                        //                        //    row: {
                                                        //                        //        village_name: village_name,
                                                        //                        //        village_address: village_address,
                                                        //                        //        village_region: village_region,
                                                        //                        //        village_type: village_type
                                                        //                        //    }
              ");
                WriteLiteral(@"                                          //                        //});


                                                        //                    }
                                                        //                },
                                                        //                error: function (item, err) {
                                                        //                    console.log(err);
                                                        //                }
                                                        //            });
                                                        //    },
                                                        //    error: function () {
                                                        //        console.log('error');
                                                        //    }
                                                        //});


                                                    });
    ");
                WriteLiteral(@"                                            },
                                                error: function () {
                                                    console.log('error');
                                                }
                                            });
                                        }
                                    }
                                },
                                error: function () {
                                    console.log('error');
                                }
                            });
                        }
                    },
                    error: function () {
                        console.log('error');
                    }
                });
            }
        }

        function getVillage(e) {
            var selectP = document.getElementById('selectProvince');
            var selectC = document.getElementById('selectCity');
            var selectCT = document.getElementById");
                WriteLiteral(@"('selectCounty');
            var province = $(""#selectProvince"").find(""option:selected"").text();
            var city = $(""#selectCity"").find(""option:selected"").text();
            var county = $(""#selectCounty"").find(""option:selected"").text();
            var adcode = document.getElementById('selectCounty').value;
            var region = province + ""/"" + city + ""/"" + county;
            if (province !== ""所有"" && city !== ""所有"" && county !== ""所有"") {
                $.ajax({
                    type: ""get"",
                    url: `./api/regionexists?region=${region}`,
                    dataType: ""json"",
                    success: function (data) {
                        if (data[""ds""][0][""COUNT""] === 0) {
                            $.ajax({
                                type: ""get"",
                                url: `https://restapi.amap.com/v3/place/text?key=c7aeb11746b35a92b7b6eee3178a05e4&keywords=&types=120302&city=${adcode}&children=1&offset=5&page=1&extensions=all`,
         ");
                WriteLiteral(@"                       dataType: ""json"",
                                success: function (data) {
                                    var count = data[""count""];
                                    var times = 0;
                                    if (count !== 0) {
                                        //var piece = 100 / count;
                                        //var currentP = 0;
                                        //var currentCount = 0;
                                        var div = document.createElement('div');
                                        div.setAttribute('id', 'pb');
                                        div.innerHTML += `<div class=""layui-progress layui-progress-big layui-bg-orange"" lay-filter=""pb"" lay-showpercent=""true"""">
  <div class=""layui-progress-bar"" lay-percent=""0%""></div>
</div>`;
                                        document.getElementsByTagName('body')[0].appendChild(div);


                                        var currentP = 10;
       ");
                WriteLiteral(@"                                 //  set your counter to 1

                                        function myLoop() {           //  create a loop function
                                            setTimeout(function () {    //  call a 3s setTimeout when the loop is called
                                                element.progress('pb', `${String(currentP)}%`);


                                                currentP += 10;                    //  increment the counter
                                                if (currentP <= 100) {            //  if the counter < 10, call the loop function
                                                    myLoop();             //  ..  again which will trigger another
                                                } else {
                                                    document.getElementById('pb').remove(); layer.msg(""小区已更新"");
                                                }//  ..  setTimeout()
                                          ");
                WriteLiteral(@"  }, 1000)
                                        }

                                        myLoop();


                                        // wait for 1500ms then run code when code is done repeat until condition meets
                                        //setTimeout(function () { document.getElementById('pb').remove(); layer.msg(""小区已更新""); }, 3000);

                                        times = Math.ceil(count / 20);
                                        for (var i = 0; i < times; i++) {
                                            var page = i + 1;
                                            console.log('this is page' + page);
                                            $.ajax({
                                                type: ""get"",
                                                url: `https://restapi.amap.com/v3/place/text?key=c7aeb11746b35a92b7b6eee3178a05e4&keywords=&types=120302&city=${adcode}&children=1&offset=20&page=${page}&extensions=all`,
                        ");
                WriteLiteral(@"                        dataType: ""json"",
                                                success: function (data2) {
                                                    data2[""pois""].forEach(function (poi) {
                                                        //currentP += piece;
                                                        //currentCount += 1;
                                                        //var cP = `${String(currentP)}%`;
                                                        //element.progress('pb', cP);
                                                        //if (currentCount === Number(count)) {
                                                        //    setTimeout(function () { document.getElementById('pb').remove();layer.msg(""小区已更新"");},1500);
                                                        //}
                                                        var region = `${poi[""pname""]}/${poi[""cityname""]}/${poi[""adname""]}`;
                                       ");
                WriteLiteral(@"                 var lnglat = poi[""location""];
                                                        var lng = Number(lnglat.split(',')[0]);
                                                        var lat = Number(lnglat.split(',')[1]);
                                                        $.ajax({
                                                            type: ""post"",
                                                            url: `./API/CreateVillages`,
                                                            data: { ""village_code"": poi[""id""], ""village_name"": poi[""name""], ""village_address"": poi[""address""], ""village_region"": region, ""village_type"": poi[""type""], ""village_x"": lng, ""village_y"": lat, ""village_lng"": lng, ""village_lat"": lat, ""source"": ""1"" },
                                                            dataType: ""json"",
                                                            success: function (data) {
                                                                if (data.len");
                WriteLiteral(@"gth !== 0) {
                                                                    console.log('error');
                                                                } else {
                                                                    //document.getElementsByClassName(""modalSmall"")[0].remove();
                                                                    console.log('inserted');
                                                                    //$('#dg').datagrid('insertRow', {
                                                                    //    index: 0,
                                                                    //    row: {
                                                                    //        village_name: village_name,
                                                                    //        village_address: village_address,
                                                                    //        village_region: village_region,
                   ");
                WriteLiteral(@"                                                 //        village_type: village_type
                                                                    //    }
                                                                    //});


                                                                }
                                                            },
                                                            error: function (item, err) {
                                                                console.log(err);
                                                            }
                                                        });
                                                    });
                                                },
                                                error: function () {
                                                    console.log('error');
                                                }
                                            });");
                WriteLiteral(@"
                                        }
                                    }
                                },
                                error: function () {
                                    console.log('error');
                                }
                            });
                        }
                    },
                    error: function () {
                        console.log('error');
                    }
                });
            }
        }

        function drawPolygon() {
            mousetool.polygon({
                strokeColor: ""#FF33FF"",
                strokeOpacity: 1,
                strokeWeight: 6,
                strokeOpacity: 0.2,
                fillColor: '#1791fc',
                fillOpacity: 0.4,
                // 线样式还支持 'dashed'
                strokeStyle: ""solid"",
                // strokeStyle是dashed时有效
                // strokeDasharray: [30,10],
            })

        }

        function addVillage(e");
                WriteLiteral(@") {
            document.getElementById('cb').checked = false;
            form.render('checkbox');
            mousetool.close(true);
            var errors = document.getElementsByClassName(""clRedError"");
            for (var i = 0; i < errors.length; i++) {
                errors[i].remove();
            }
            if (document.getElementById('fieldHidden').value === """") {
                var div = document.createElement('div');
                div.classList.add(""clRedError"");
                div.innerHTML += `<p class=""mb-5"">请输入边界</p>`;
                e.appendChild(div);
            } else {
                var inputs = e.getElementsByTagName('input');
                var selects = e.getElementsByTagName('select');
                var village_name = inputs[0].value;
                var village_address = inputs[1].value;
                var village_region = $('#selectProvinceD').find("":selected"").text() + $('#selectCityD').find("":selected"").text() + $('#selectCountyD').find("":selected");
                WriteLiteral(@""").text();
                console.log(village_region);

                var village_type = selects[3].value;
                var village_bounds = document.getElementById('fieldHidden').value;
                var village_x = String(JSON.parse(document.getElementById('fieldHidden').value)[0][0]);
                var village_y = String(JSON.parse(document.getElementById('fieldHidden').value)[0][1]);
                var village_lng = String(JSON.parse(document.getElementById('fieldHidden').value)[0][0]);
                var village_lat = String(JSON.parse(document.getElementById('fieldHidden').value)[0][1]);
                var source = String(2);
                $.ajax({
                    type: ""post"",
                    url: `./API/CreateVillage`,
                    data: { ""village_name"": village_name, ""village_address"": village_address, ""village_region"": village_region, ""village_type"": village_type, ""village_bounds"": village_bounds, ""village_x"": village_x, ""village_y"": village_y, ""village_ln");
                WriteLiteral(@"g"": village_lng, ""village_lat"": village_lat, ""source"": source },
                    dataType: ""json"",
                    success: function (data) {
                        if (data.length !== 0) {
                            var div = document.createElement('div');
                            div.classList.add(""clRedError"");
                            data.forEach(function (error) {
                                div.innerHTML += `<p class=""mb-5"">${error}</p>`;
                            })
                            e.appendChild(div);
                        } else {
                            //document.getElementsByClassName(""modalSmall"")[0].remove();
                            layer.closeAll();
                            layer.msg(""小区已添加"");
                            //$('#dg').datagrid('insertRow', {
                            //    index: 0,
                            //    row: {
                            //        village_name: village_name,
                           ");
                WriteLiteral(@" //        village_address: village_address,
                            //        village_region: village_region,
                            //        village_type: village_type
                            //    }
                            //});


                        }
                    },
                    error: function (item, err) {
                        console.log(err);
                    }
                });
            }

        }

        function newVillage(e) {
            // render a form and mousetool

            for (var i = 0; i < document.getElementsByClassName(""modalSmall"").length; i++) {
                document.getElementsByClassName(""modalSmall"")[i].remove();
            }

            mousetool.close(true);
            var selectFilter = document.getElementById('selectFilter');
            var selectProvince = selectFilter.children[0];
            var selectCity = selectFilter.children[1];
            var selectCounty = selectFilter.children[2");
                WriteLiteral(@"];

            var selectedProvince = $('#selectProvince').find("":selected"").text();
            var selectedCity = $('#selectCity').find("":selected"").text();
            var selectedCounty = $('#selectCounty').find("":selected"").text();
            var selectProvinceD = `<select id=""selectProvinceD"" name=""province"" class=""selectPCC"" required>`;
            var optionsProvince = selectProvince.innerHTML;
            var index = optionsProvince.match(selectedProvince)[""index""];
            var optionsProvinceF = optionsProvince.slice(0, index - 1) + ""selected"" + optionsProvince.slice(index - 1);
            selectProvinceD += optionsProvinceF + `</select>`;

            var selectCityD = `<select id=""selectCityD"" name=""city"" class=""selectPCC"" required>`;
            var optionsCity = selectCity.innerHTML;
            var index = optionsCity.match(selectedCity)[""index""];
            var optionsCityF = optionsCity.slice(0, index - 1) + ""selected"" + optionsCity.slice(index - 1);
            selectC");
                WriteLiteral(@"ityD += optionsCityF + `</select>`;
            var selectCountyD = `<select id=""selectCountyD"" name=""county"" class=""selectPCC"" required>`;
            var optionsCounty = selectCounty.innerHTML;
            var index = optionsCounty.match(selectedCounty)[""index""];
            var optionsCountyF = optionsCounty.slice(0, index - 1) + ""selected"" + optionsCounty.slice(index - 1);
            selectCountyD += optionsCountyF + `</select>`;
            //var textoptionProvince = $('#selectProvince').find("":selected"").text();
            //var valoptionProvince = $('#selectProvince').find("":selected"").val();
            //var textoptionCity = $('#selectCity').find("":selected"").text();
            //var valoptionCity = $('#selectCity').find("":selected"").val();
            //var textoptionCounty = $('#selectCounty').find("":selected"").text();
            //var valoptionCounty = $('#selectCounty').find("":selected"").val();
            layer.open({
                btn: [],
                maxWidth: 750,
   ");
                WriteLiteral(@"             //               yes: function(index, layero){
                //  //按钮【按钮一】的回调
                //                   document.getElementsByTagName('form')[0].submit();
                //},
                shade: 0,
                title: ""新建小区"",
                content: `<form class=""layui-form layui-form-pane"" action="""" onsubmit=""event.preventDefault();addVillage(this);"">
                   <div class=""layui-form-item"">
                    <label class=""layui-form-label"">小区名称</label>
                <div class=""layui-input-block"">

                      <input type=""text"" name=""village_name"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" required>

</div>
                  </div>
                  <div class=""layui-form-item"">
                    <label class=""layui-form-label"">详细地址</label>
                <div class=""layui-input-block"">


                      <input type=""text"" name=""village_address"" lay-verify=""required"" placeholder=""请输入"" au");
                WriteLiteral(@"tocomplete=""off"" class=""layui-input""  required>

  </div>
                  </div>
                  <!--<div class=""layui-form-item"">
                    <label class=""layui-form-label"">区域</label>
                    <div class=""layui-input-inline"">
                      <input type=""text"" name=""village_region"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input""  required>
                    </div>
                  </div>
               <div class=""layui-form-item"">
                    <label class=""layui-form-label"">类型</label>
                    <div class=""layui-input-inline"">
                      <input type=""text"" name=""village_type"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input""  required>
                    </div>
                  </div>-->

              <!--<div class=""layui-form-item"">
                <label class=""layui-form-label"">区域</label>
                <div class=""layui-input-block"">
                  <select");
                WriteLiteral(@" name=""region"" lay-filter=""aihao""  required>
                            <option value=""内蒙古自治区/赤峰市/红山区"">内蒙古自治区/赤峰市/红山区</option>
                            <option value=""内蒙古自治区/赤峰市/元宝山区"">内蒙古自治区/赤峰市/元宝山区</option>
                            <option value=""内蒙古自治区/赤峰市/松山区"">内蒙古自治区/赤峰市/松山区</option>
                            <option value=""内蒙古自治区/赤峰市/阿鲁科尔沁旗"">内蒙古自治区/赤峰市/阿鲁科尔沁旗</option>
                            <option value=""内蒙古自治区/赤峰市/巴林左旗"">内蒙古自治区/赤峰市/巴林左旗</option>
                            <option value=""内蒙古自治区/赤峰市/巴林右旗"">内蒙古自治区/赤峰市/巴林右旗</option>
                            <option value=""内蒙古自治区/赤峰市/林西县"">内蒙古自治区/赤峰市/林西县</option>
                            <option value=""内蒙古自治区/赤峰市/克什克腾旗"">内蒙古自治区/赤峰市/克什克腾旗</option>
                            <option value=""内蒙古自治区/赤峰市/翁牛特旗"">内蒙古自治区/赤峰市/翁牛特旗</option>
                            <option value=""内蒙古自治区/赤峰市/喀喇沁旗"">内蒙古自治区/赤峰市/喀喇沁旗</option>
                            <option value=""内蒙古自治区/赤峰市/宁城县"">内蒙古自治区/赤峰市/宁城县</option>
                            <optio");
                WriteLiteral(@"n value=""内蒙古自治区/赤峰市/敖汉旗"">内蒙古自治区/赤峰市/敖汉旗</option>
                  </select>
                </div>
              </div>-->`+ `
  <div class=""layui-form-item"">
    <label class=""layui-form-label"">区域</label>
    <div class=""layui-input-inline"">` + selectProvinceD + `</div><div class=""layui-input-inline"">` + selectCityD + `</div><div class=""layui-input-inline"">` + selectCountyD +
                    `</select></div></div><div class=""layui-form-item"">
                <label class=""layui-form-label"">类型</label>
                <div class=""layui-input-block"">
                  <select name=""type"" lay-filter=""aihao""  required>
                    <option value=""商务住宅;住宅区;住宅小区"">商务住宅;住宅区;住宅小区</option>
                  </select>
                </div>
              </div>
                <div class=""layui-form-item hidden"">
                    <label class=""layui-form-label""></label>
                    <div class=""layui-input-inline"">
                      <input type=""text"" id=""fieldHidden"" name=""vi");
                WriteLiteral(@"llage_bounds"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"">
                    </div>
                  </div>
<div class=""layui-form-item"">
                <label class=""layui-form-label"">编辑边界</label>
                <div class=""layui-input-block"">
                  <input type=""checkbox"" name=""close"" lay-skin=""switch"" lay-text=""是|否"" lay-filter=""switchT"" id='cb'>
                </div>
              </div>




<!--<div class=""layui-form-item"">
                    <div class=""layui-input-block"">
                      <button class=""layui-btn layui-btn-normal fr"" lay-submit="""" lay-filter=""demo1"">保存</button>
                    </div>
                  </div>
                  </div>-->
 <button type=""submit"" class=""layui-btn layui-btn-normal fr"">保存</button>
</form>`

            });


            form.render();
            form.on('switch(switchT)', function (data) {
                if (data.elem.checked) {
                    drawPolygon();
     ");
                WriteLiteral(@"           } else {
                    mousetool.close(true);
                }
                //console.log(data.elem); //得到checkbox原始DOM对象
                //console.log(data.elem.checked); //开关是否开启，true或者false
                //console.log(data.value); //开关value值，也可以通过data.elem.value得到
                //console.log(data.othis); //得到美化后的DOM对象
            });



        }



        function addBuilding(e) {
            //document.getElementById('cb').checked = false;
            //form.render('checkbox');
            //mousetool.close(true);
            var errors = document.getElementsByClassName(""clRedError"");
            for (var i = 0; i < errors.length; i++) {
                errors[i].remove();
            }
            var inputs = e.getElementsByTagName('input');
            var selects = e.getElementsByTagName('select');
            var building_number = inputs[0].value;
            var building_name = inputs[1].value;
            var building_address = inputs[2].value;");
                WriteLiteral(@"
            var building_region = $('#selectProvinceD').find("":selected"").text() + $('#selectCityD').find("":selected"").text() + $('#selectCountyD').find("":selected"").text();
            var building_type = selects[3].value;
            //var building_bounds = document.getElementById('fieldHidden').value;
            //var building_x = String(JSON.parse(document.getElementById('fieldHidden').value)[0][0]);
            //var building_y = String(JSON.parse(document.getElementById('fieldHidden').value)[0][1]);
            //var building_lng = String(JSON.parse(document.getElementById('fieldHidden').value)[0][0]);
            //var building_lat = String(JSON.parse(document.getElementById('fieldHidden').value)[0][1]);
            var source = String(2);
            $.ajax({
                type: ""post"",
                url: `./API/CreateBuilding`,
                //data: { ""building_number"": building_number, ""building_name"": building_name, ""building_address"": building_address, ""building_region"": buildin");
                WriteLiteral(@"g_region, ""building_type"": building_type, ""building_bounds"" : building_bounds, ""building_x"": building_x, ""building_y"": building_y, ""building_lng"": building_lng, ""building_lat"":building_lat, ""source"":source },
                data: { ""building_number"": building_number, ""building_name"": building_name, ""building_address"": building_address, ""building_region"": building_region, ""building_type"": building_type, ""source"": source },


                dataType: ""json"",
                success: function (data) {
                    if (data.length !== 0) {
                        var div = document.createElement('div');
                        div.classList.add(""clRedError"");
                        data.forEach(function (error) {
                            div.innerHTML += `<p class=""mb-5"">${error}</p>`;
                        })
                        e.appendChild(div);
                    } else {
                        //document.getElementsByClassName(""modalSmall"")[0].remove();
                  ");
                WriteLiteral(@"      layer.closeAll();
                        layer.msg(""楼宇已添加"");
                        //$('#dg').datagrid('insertRow', {
                        //    index: 0,
                        //    row: {
                        //        village_name: village_name,
                        //        village_address: village_address,
                        //        village_region: village_region,
                        //        village_type: village_type
                        //    }
                        //});


                    }
                },
                error: function (item, err) {
                    console.log(err);
                }
            });
        }

        function newBuilding(e) {
            // render a form and mousetool

            for (var i = 0; i < document.getElementsByClassName(""modalSmall"").length; i++) {
                document.getElementsByClassName(""modalSmall"")[i].remove();
            }
            mousetool.close(true);
      ");
                WriteLiteral(@"      var selectFilter = document.getElementById('selectFilter');
            var selectProvince = selectFilter.children[0];
            var selectCity = selectFilter.children[1];
            var selectCounty = selectFilter.children[2];

            var selectedProvince = $('#selectProvince').find("":selected"").text();
            var selectedCity = $('#selectCity').find("":selected"").text();
            var selectedCounty = $('#selectCounty').find("":selected"").text();
            var selectProvinceD = `<select id=""selectProvinceD"" name=""province"" class=""selectPCC"" required>`;
            var optionsProvince = selectProvince.innerHTML;
            var index = optionsProvince.match(selectedProvince)[""index""];
            var optionsProvinceF = optionsProvince.slice(0, index - 1) + ""selected"" + optionsProvince.slice(index - 1);
            selectProvinceD += optionsProvinceF + `</select>`;

            var selectCityD = `<select id=""selectCityD"" name=""city"" class=""selectPCC"" required>`;
           ");
                WriteLiteral(@" var optionsCity = selectCity.innerHTML;
            var index = optionsCity.match(selectedCity)[""index""];
            var optionsCityF = optionsCity.slice(0, index - 1) + ""selected"" + optionsCity.slice(index - 1);
            selectCityD += optionsCityF + `</select>`;
            var selectCountyD = `<select id=""selectCountyD"" name=""county"" class=""selectPCC"" required>`;
            var optionsCounty = selectCounty.innerHTML;
            var index = optionsCounty.match(selectedCounty)[""index""];
            var optionsCountyF = optionsCounty.slice(0, index - 1) + ""selected"" + optionsCounty.slice(index - 1);
            selectCountyD += optionsCountyF + `</select>`;
            layer.open({
                btn: [],
                maxWidth: 750,
                //               yes: function(index, layero){
                //  //按钮【按钮一】的回调
                //                   document.getElementsByTagName('form')[0].submit();
                //},
                shade: 0,
                title:");
                WriteLiteral(@" ""新建楼宇"",
                content: `<form class=""layui-form layui-form-pane"" action="""" onsubmit=""event.preventDefault();addBuilding(this);"">
                   <div class=""layui-form-item"">
                    <label class=""layui-form-label"">楼宇号码</label>
                <div class=""layui-input-block"">
                      <input type=""text"" name=""building_number"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" required>
                    </div>
                  </div>
              <div class=""layui-form-item"">
                    <label class=""layui-form-label"">楼宇名称</label>
                <div class=""layui-input-block"">
                      <input type=""text"" name=""building_name"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" required>
                    </div>
                  </div>
                  <div class=""layui-form-item"">
                    <label class=""layui-form-label"">详细地址</label>
                <div class=""");
                WriteLiteral(@"layui-input-block"">
                      <input type=""text"" name=""building_address"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" required>
                    </div>
                  </div>
       <div class=""layui-form-item"">
    <label class=""layui-form-label"">区域</label>
    <div class=""layui-input-inline"">` + selectProvinceD + `</div><div class=""layui-input-inline"">` + selectCityD + `</div><div class=""layui-input-inline"">` + selectCountyD +
                    `</select></div></div>

<div class=""layui-form-item"">
                <label class=""layui-form-label"">类型</label>
                <div class=""layui-input-block"">
                  <select name=""type"" lay-filter=""aihao"" required>
                    <option value=""地名地址信息;门牌信息;楼栋号"">地名地址信息;门牌信息;楼栋号</option>
                  </select>
                </div>
              </div>
               <!--<div class=""layui-form-item hidden"">
                    <label class=""layui-form-label""></label>
       ");
                WriteLiteral(@"             <div class=""layui-input-inline"">
                      <input type=""text"" id=""fieldHidden"" name=""building_bounds"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" >
                    </div>
                  </div>
<div class=""layui-form-item"">
                <label class=""layui-form-label"">编辑边界</label>
                <div class=""layui-input-block"">
                  <input type=""checkbox"" name=""close"" lay-skin=""switch"" lay-text=""是|否"" lay-filter=""switchT"" id=""cb"">
                </div>
              </div>-->


<!--<div class=""layui-form-item"">
                    <div class=""layui-input-block"">
                      <button class=""layui-btn layui-btn-normal fr"" lay-submit="""" lay-filter=""demo1"">保存</button>
                    </div>
                  </div>
                  </div>-->
 <button type=""submit"" class=""layui-btn layui-btn-normal fr"">保存</button>

</form>`

            });


            form.render();

        }

        fu");
                WriteLiteral(@"nction getPoiDetail(e) {
            setTimeout(function () {
                var dataGuid = e.getAttribute(""data-guid"");
                $.ajax({
                    type: ""get"",
                    url: `./API/DetailsVillage?id=${dataGuid}`,
                    contentType: ""application/json; charset=utf-8"",
                    dataType: ""json"",
                    success: function (data) {
                        layer.open({
                            btn: [],
                            move: false,
                            offset: ['100px', '80%'],
                            //               yes: function(index, layero){
                            //  //按钮【按钮一】的回调
                            //                   document.getElementsByTagName('form')[0].submit();
                            //},
                            shade: 0,
                            title: ""小区信息"",
                            content: `<div class=""mb-10""><span class=""mr-5 bold"">小区名称:</span><span>${data");
                WriteLiteral(@"[""ds""][0][""VILLAGE_NAME""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">详细地址:</span><span>${data[""ds""][0][""VILLAGE_ADDRESS""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">区域:</span><span>${data[""ds""][0][""VILLAGE_REGION""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">类型:</span><span>${data[""ds""][0][""VILLAGE_TYPE""]}</span></div>`

                        });
                        //var container = document.createElement('div');
                        //container.setAttribute(""class"", ""modalSmall"");
                        //container.innerHTML += `<div class=""flex sb mb-10""><span class=""bb-lightblue"">小区信息</span><button type=""button"" class=""layui-btn layui-btn-normal layui-btn-radius layui-btn-sm"" onclick=""closeModal(this);"">X</button></div><div class=""mb-10""><span class=""mr-5 bold"">小区名称:</span><span>${data[""ds""][0][""VILLAGE_NAME""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">详细地址:</span><span>${data[""ds""][0][""VILLAGE_ADDRESS""]}</span></div><div  class=""mb-10""");
                WriteLiteral(@"><span class=""mr-5 bold"">区域:</span><span>${data[""ds""][0][""VILLAGE_REGION""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">类型:</span><span>${data[""ds""][0][""VILLAGE_TYPE""]}</span></div>`;
                        ////htmlPoiDetail = `<div class=""modalSmall""><div class=""flex""><span>小区信息</span><button>x</button></div><div><span>小区名称</span><span>${data[""ds""][0][""VILLAGE_NAME""]}</span></div><div><span>详细地址</span><span>${data[""ds""][0][""VILLAGE_ADDRESS""]}</span></div><div><span>区域</span><span>${data[""ds""][0][""VILLAGE_REGION""]}</span></div><div><span>类型</span><span>${data[""ds""][0][""VILLAGE_TYPE""]}</span></div></div>`;
                        //document.getElementsByTagName(""body"")[0].appendChild(container);
                    },
                    error: function (item, err) {
                        console.log(err);
                    }
                });
            }, 1500);


        }

        function getPoiDetail2(e) {
            setTimeout(function () {
                console.log");
                WriteLiteral(@"('clicked second');
                var dataGuid = e.getAttribute(""data-guid"");
                $.ajax({
                    type: ""get"",
                    url: `./API/DetailsBuilding?id=${dataGuid}`,
                    contentType: ""application/json; charset=utf-8"",
                    dataType: ""json"",
                    success: function (data) {
                        layer.open({
                            btn: [],
                            move: false,
                            offset: ['100px', '80%'],
                            //               yes: function(index, layero){
                            //  //按钮【按钮一】的回调
                            //                   document.getElementsByTagName('form')[0].submit();
                            //},
                            shade: 0,
                            title: ""楼宇信息"",
                            content: `<div class=""mb-10""><span class=""mr-5 bold"">楼宇名称:</span><span>${data[""ds""][0][""BUILDING_NAME""]}</span></div><d");
                WriteLiteral(@"iv  class=""mb-10""><span class=""mr-5 bold"">详细地址:</span><span>${data[""ds""][0][""BUILDING_ADDRESS""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">区域:</span><span>${data[""ds""][0][""REGION""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">类型:</span><span>${data[""ds""][0][""TYPE""]}</span></div>`

                        });
                        //var container = document.createElement('div');
                        //container.setAttribute(""class"", ""modalSmall"");
                        //container.innerHTML += `<div class=""flex sb mb-10""><span class=""bb-lightblue"">楼宇信息</span><button type=""button"" class=""layui-btn layui-btn-normal layui-btn-radius layui-btn-sm"" onclick=""closeModal(this);"">X</button></div><div class=""mb-10""><span class=""mr-5 bold"">楼宇名称:</span><span>${data[""ds""][0][""BUILDING_NAME""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">详细地址:</span><span>${data[""ds""][0][""BUILDING_ADDRESS""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">区域:</span><span>${data[""ds""][");
                WriteLiteral(@"0][""REGION""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">类型:</span><span>${data[""ds""][0][""TYPE""]}</span></div>`;
                        ////htmlPoiDetail = `<div class=""modalSmall""><div class=""flex""><span>小区信息</span><button>x</button></div><div><span>小区名称</span><span>${data[""ds""][0][""VILLAGE_NAME""]}</span></div><div><span>详细地址</span><span>${data[""ds""][0][""VILLAGE_ADDRESS""]}</span></div><div><span>区域</span><span>${data[""ds""][0][""VILLAGE_REGION""]}</span></div><div><span>类型</span><span>${data[""ds""][0][""VILLAGE_TYPE""]}</span></div></div>`;
                        //document.getElementsByTagName(""body"")[0].appendChild(container);
                    },
                    error: function (item, err) {
                        console.log(err);
                    }
                });
            }, 1500);

        }

        function editPoiNoBounds(e) {
            var errors = document.getElementsByClassName(""clRedError"");
            for (var i = 0; i < errors.length; i++) {
       ");
                WriteLiteral(@"         errors[i].remove();
            }
            var inputs = e.getElementsByTagName('input');
            var village_name = inputs[0].value;
            var village_address = inputs[1].value;
            var village_region = inputs[2].value;
            var village_type = inputs[3].value;
            var dataGuid = e.getAttribute(""data-guid"");
            $.ajax({
                type: ""post"",
                url: `./API/EditVillageNoBounds?id=${dataGuid}`,
                data: { ""village_name"": village_name, ""village_address"": village_address, ""village_region"": village_region, ""village_type"": village_type },
                dataType: ""json"",
                success: function (data) {
                    if (data.length !== 0) {
                        var div = document.createElement('div');
                        div.classList.add(""clRedError"");
                        data.forEach(function (error) {
                            div.innerHTML += `<p class=""mb-5"">${error}</p>`;
  ");
                WriteLiteral(@"                      })
                        e.appendChild(div);
                    } else {
                        document.getElementsByClassName(""modalSmall"")[0].remove();
                        layer.msg(""小区已编辑"");
                        $('#dg').datagrid('updateRow', {
                            index: document.getElementsByTagName(""body"")[0].getAttribute(""data-currentindex""),
                            row: {
                                village_name: village_name,
                                village_address: village_address,
                                village_region: village_region,
                                village_type: village_type
                            }
                        });
                    }
                },
                error: function (item, err) {
                    console.log(err);
                }
            });

        }


        function editPoiBounds(e) {
            document.getElementById('cb').checked = fals");
                WriteLiteral(@"e;
            form.render('checkbox');
            mousetool.close(true);
            var errors = document.getElementsByClassName(""clRedError"");
            for (var i = 0; i < errors.length; i++) {
                errors[i].remove();
            }
            if (document.getElementById('fieldHidden').value === """") {
                var div = document.createElement('div');
                div.classList.add(""clRedError"");
                div.innerHTML += `<p class=""mb-5"">请输入边界</p>`;
                e.appendChild(div);
            } else {
                var inputs = e.getElementsByTagName('input');
                var village_name = inputs[0].value;
                var village_address = inputs[1].value;
                var village_region = inputs[2].value;
                var village_type = inputs[3].value;
                var village_bounds = document.getElementById('fieldHidden').value;
                //var polygon;
                //var overlays = map.getAllOverlays(""polygon"");
   ");
                WriteLiteral(@"             //overlays.forEach(function (overlay) {
                //    if (overlay.getOptions()[""strokeColor""] === ""#D00000"") {
                //        polygon = overlay;
                //    }
                //});
                //village_bounds = ""["";
                //polygon.getPath().forEach(function (coord) {
                //    village_bounds += `[${String(coord[""lng""])},${String(coord[""lat""])}],`;
                //});
                //village_bounds = village_bounds.slice(0, village_bounds.length - 1);
                //village_bounds += ""]"";
                var dataGuid = e.getAttribute(""data-guid"");

                $.ajax({
                    type: ""post"",
                    url: `./API/EditVillageBounds?id=${dataGuid}`,
                    data: { ""village_name"": village_name, ""village_address"": village_address, ""village_region"": village_region, ""village_type"": village_type, ""village_bounds"": village_bounds },
                    dataType: ""json"",
                 ");
                WriteLiteral(@"   success: function (data) {
                        if (data.length !== 0) {
                            var div = document.createElement('div');
                            div.classList.add(""clRedError"");
                            data.forEach(function (error) {
                                div.innerHTML += `<p class=""mb-5"">${error}</p>`;
                            })
                            e.appendChild(div);
                        } else {
                            layer.closeAll();
                            layer.msg(""小区已编辑"");
                            $('#dg').datagrid('updateRow', {
                                index: document.getElementsByTagName(""body"")[0].getAttribute(""data-currentindex""),
                                row: {
                                    village_name: village_name,
                                    village_address: village_address,
                                    village_region: village_region,
                                  ");
                WriteLiteral(@"  village_type: village_type
                                }
                            });
                        }

                    },
                    error: function (item, err) {
                        console.log(err);
                    }
                });
            }
        }

        function editPoiBounds2(e, polygon) {
            document.getElementById('cb').checked = false;
            form.render('checkbox');
            polygon.getExtData()[""editor""].close();

            var errors = document.getElementsByClassName(""clRedError"");
            for (var i = 0; i < errors.length; i++) {
                errors[i].remove();
            }
            var inputs = e.getElementsByTagName('input');
            var village_name = inputs[0].value;
            var village_address = inputs[1].value;
            var village_region = inputs[2].value;
            var village_type = inputs[3].value;
            village_bounds = ""["";
            polygon.getPath().fo");
                WriteLiteral(@"rEach(function (coord) {
                village_bounds += `[${String(coord[""lng""])},${String(coord[""lat""])}],`;
            });
            village_bounds = village_bounds.slice(0, village_bounds.length - 1);
            village_bounds += ""]"";
            var dataGuid = e.getAttribute(""data-guid"");

            $.ajax({
                type: ""post"",
                url: `./API/EditVillageBounds?id=${dataGuid}`,
                data: { ""village_name"": village_name, ""village_address"": village_address, ""village_region"": village_region, ""village_type"": village_type, ""village_bounds"": village_bounds },
                dataType: ""json"",
                success: function (data) {
                    if (data.length !== 0) {
                        var div = document.createElement('div');
                        div.classList.add(""clRedError"");
                        data.forEach(function (error) {
                            div.innerHTML += `<p class=""mb-5"">${error}</p>`;
                       ");
                WriteLiteral(@" })
                        e.appendChild(div);
                    } else {
                        layer.closeAll();
                        layer.msg(""小区已编辑"");
                        $('#dg').datagrid('updateRow', {
                            index: document.getElementsByTagName(""body"")[0].getAttribute(""data-currentindex""),
                            row: {
                                village_name: village_name,
                                village_address: village_address,
                                village_region: village_region,
                                village_type: village_type
                            }
                        });
                    }

                },
                error: function (item, err) {
                    console.log(err);
                }
            });

        }


        function editPoiBuilding(e) {
            var errors = document.getElementsByClassName(""clRedError"");
            for (var i = 0; i < errors.le");
                WriteLiteral(@"ngth; i++) {
                errors[i].remove();
            }
            var inputs = e.getElementsByTagName('input');
            var building_number = inputs[0].value;
            var building_name = inputs[1].value;
            var building_address = inputs[2].value
            var building_region = inputs[3].value;
            var building_type = inputs[4].value;
            console.log(building_type);
            var dataGuid = e.getAttribute(""data-guid"");
            $.ajax({
                type: ""post"",
                url: `./API/EditBuilding?id=${dataGuid}`,
                data: { ""building_number"": building_number, ""building_name"": building_name, ""building_address"": building_address, ""building_region"": building_region, ""building_type"": building_type },
                dataType: ""json"",
                success: function (data) {
                    if (data.length !== 0) {
                        var div = document.createElement('div');
                        div.classList.add");
                WriteLiteral(@"(""clRedError"");
                        data.forEach(function (error) {
                            div.innerHTML += `<p class=""mb-5"">${error}</p>`;
                        })
                        e.appendChild(div);
                    } else {
                        layer.closeAll();
                        layer.msg(""楼宇已编辑"");
                        $('#dg2').datagrid('updateRow', {
                            index: document.getElementsByTagName(""body"")[0].getAttribute(""data-currentindex""),
                            row: {
                                building_name: building_name,
                                building_address: building_address
                            }
                        });
                    }
                },
                error: function (item, err) {
                    console.log(err);
                }
            });

        }


        function editPoi(e) {
            setTimeout(function () {
                var dataGuid = e");
                WriteLiteral(@".getAttribute(""data-guid"");
                $.ajax({
                    type: ""get"",
                    url: `./API/DetailsVillage?id=${dataGuid}`,
                    contentType: ""application/json; charset=utf-8"",
                    dataType: ""json"",
                    success: function (data) {
                        if (data[""ds""][0][""VILLAGE_BOUNDS""] === null) {

                            layer.open({
                                btn: [],
                                //               yes: function(index, layero){
                                //  //按钮【按钮一】的回调
                                //                   document.getElementsByTagName('form')[0].submit();
                                //},
                                shade: 0,
                                title: ""编辑小区信息"",
                                content: `<form class=""layui-form layui-form-pane"" action="""" onsubmit=""event.preventDefault();editPoiBounds(this);"" data-guid=${dataGuid}>
                 ");
                WriteLiteral(@"  <div class=""layui-form-item"">
                    <label class=""layui-form-label"">小区名称</label>
                    <div class=""layui-input-inline"">
                      <input type=""text"" name=""village_name"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" required value=""${data[""ds""][0][""VILLAGE_NAME""]}"">
                    </div>
                  </div>
                  <div class=""layui-form-item"">
                    <label class=""layui-form-label"">详细地址</label>
                    <div class=""layui-input-inline"">
                      <input type=""text"" name=""village_address"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input""  required  value=""${data[""ds""][0][""VILLAGE_ADDRESS""]}"">
                    </div>
                  </div>
                  <!--<div class=""layui-form-item"">
                    <label class=""layui-form-label"">区域</label>
                    <div class=""layui-input-inline"">
                      <input ty");
                WriteLiteral(@"pe=""text"" name=""village_region"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input""  required value=""${data[""ds""][0][""VILLAGE_REGION""]}"">
                    </div>
                  </div>
               <div class=""layui-form-item"">
                    <label class=""layui-form-label"">类型</label>
                    <div class=""layui-input-inline"">
                      <input type=""text"" name=""village_type"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input""  required  value=""${data[""ds""][0][""VILLAGE_TYPE""]}"">
                    </div>
                  </div>-->

              <div class=""layui-form-item"">
                <label class=""layui-form-label"">区域</label>
                <div class=""layui-input-block"">
                  <select name=""region"" required>
                            <option value=""` + data[""ds""][0][""VILLAGE_REGION""] + `"">` + data[""ds""][0][""VILLAGE_REGION""] + `
                  </option></select>
                </d");
                WriteLiteral(@"iv>
              </div>

<div class=""layui-form-item"">
                <label class=""layui-form-label"">类型</label>
                <div class=""layui-input-block"">
                  <select name=""type"" lay-filter=""aihao""  required>
                    <option value=""商务住宅;住宅区;住宅小区"">商务住宅;住宅区;住宅小区</option>
                  </select>
                </div>
              </div>
                <div class=""layui-form-item hidden"">
                    <label class=""layui-form-label""></label>
                    <div class=""layui-input-inline"">
                      <input type=""text"" id=""fieldHidden"" name=""village_bounds"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"">
                    </div>
                  </div>
<div class=""layui-form-item"">
                <label class=""layui-form-label"">编辑边界</label>
                <div class=""layui-input-block"">
                  <input type=""checkbox"" name=""close"" lay-skin=""switch"" lay-text=""是|否"" lay-filter=""switchT"" id");
                WriteLiteral(@"='cb'>
                </div>
              </div>




<!--<div class=""layui-form-item"">
                    <div class=""layui-input-block"">
                      <button class=""layui-btn layui-btn-normal fr"" lay-submit="""" lay-filter=""demo1"">保存</button>
                    </div>
                  </div>
                  </div>-->
 <button type=""submit"" class=""layui-btn layui-btn-normal fr"">保存</button>
</form>`

                            });

                            form.render();
                            form.on('switch(switchT)', function (d) {
                                if (d.elem.checked) {
                                    drawPolygon();
                                } else {
                                    mousetool.close(true);
                                }

                            });
                        } else {
                            var polygon = map.getAllOverlays(""polygon"")[0];
                            //overlays.forEach(func");
                WriteLiteral(@"tion (overlay) {
                            //    if (overlay.getOptions()[""strokeColor""] === ""#D00000"") {
                            //        polygon = overlay;
                            //    }
                            //});
                            layer.open({
                                btn: [],
                                //               yes: function(index, layero){
                                //  //按钮【按钮一】的回调
                                //                   document.getElementsByTagName('form')[0].submit();
                                //},
                                shade: 0,
                                title: ""编辑小区信息"",
                                content: `<form class=""layui-form layui-form-pane"" action="""" data-guid=${dataGuid}>
                   <div class=""layui-form-item"">
                    <label class=""layui-form-label"">小区名称</label>
                    <div class=""layui-input-inline"">
                      <input type=""text"" name=""");
                WriteLiteral(@"village_name"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" required value=""${data[""ds""][0][""VILLAGE_NAME""]}"">
                    </div>
                  </div>
                  <div class=""layui-form-item"">
                    <label class=""layui-form-label"">详细地址</label>
                    <div class=""layui-input-inline"">
                      <input type=""text"" name=""village_address"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input""  required  value=""${data[""ds""][0][""VILLAGE_ADDRESS""]}"">
                    </div>
                  </div>
                  <!--<div class=""layui-form-item"">
                    <label class=""layui-form-label"">区域</label>
                    <div class=""layui-input-inline"">
                      <input type=""text"" name=""village_region"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input""  required value=""${data[""ds""][0][""VILLAGE_REGION""]}"">
                    </div>
      ");
                WriteLiteral(@"            </div>
               <div class=""layui-form-item"">
                    <label class=""layui-form-label"">类型</label>
                    <div class=""layui-input-inline"">
                      <input type=""text"" name=""village_type"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input""  required  value=""${data[""ds""][0][""VILLAGE_TYPE""]}"">
                    </div>
                  </div>-->

              <div class=""layui-form-item"">
                <label class=""layui-form-label"">区域</label>
              <div class=""layui-input-block"">
                  <select name=""region"" required>
                            <option value=""` + data[""ds""][0][""VILLAGE_REGION""] + `"">` + data[""ds""][0][""VILLAGE_REGION""] + `
                  </option></select>
                </div>
              </div>

<div class=""layui-form-item"">
                <label class=""layui-form-label"">类型</label>
                <div class=""layui-input-block"">
                  <select name=""t");
                WriteLiteral(@"ype"" lay-filter=""aihao""  required>
                    <option value=""商务住宅;住宅区;住宅小区"">商务住宅;住宅区;住宅小区</option>
                  </select>
                </div>
              </div>
                <div class=""layui-form-item hidden"">
                    <label class=""layui-form-label""></label>
                    <div class=""layui-input-inline"">
                      <input type=""text"" id=""fieldHidden"" name=""village_bounds"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"">
                    </div>
                  </div>
<div class=""layui-form-item"">
                <label class=""layui-form-label"">编辑边界</label>
                <div class=""layui-input-block"">
                  <input type=""checkbox"" name=""close"" lay-skin=""switch"" lay-text=""是|否"" lay-filter=""switchT"" id='cb'>
                </div>
              </div>




<!--<div class=""layui-form-item"">
                    <div class=""layui-input-block"">
                      <button class=""layui-btn layui");
                WriteLiteral(@"-btn-normal fr"" lay-submit="""" lay-filter=""demo1"">保存</button>
                    </div>
                  </div>
                  </div>-->
 <button type=""submit"" class=""layui-btn layui-btn-normal fr"">保存</button>
</form>`

                            });

                            form.render();
                            form.on('switch(switchT)', function (d) {
                                if (d.elem.checked) {
                                    polygon.getExtData()[""editor""].open();
                                } else {
                                    polygon.getExtData()[""editor""].close();
                                }
                            });
                            document.getElementsByTagName('form')[0].addEventListener('submit', function (e) {
                                event.preventDefault();
                                editPoiBounds2(e.target, polygon);
                            });




                        }
                    ");
                WriteLiteral(@"},
                    error: function (item, err) {
                        console.log(err);
                    }
                });
            }, 1500);
        }
        //console.log(data.elem); //得到checkbox原始DOM对象
        //console.log(data.elem.checked); //开关是否开启，true或者false
        //console.log(data.value); //开关value值，也可以通过data.elem.value得到
        //console.log(data.othis); //得到美化后的DOM对象

        function editPoi2(e) {
            setTimeout(function () {
                var dataGuid = e.getAttribute(""data-guid"");
                $.ajax({
                    type: ""get"",
                    url: `./API/DetailsBuilding?id=${dataGuid}`,
                    contentType: ""application/json; charset=utf-8"",
                    dataType: ""json"",
                    success: function (data) {
                        layer.open({
                            btn: [],
                            //               yes: function(index, layero){
                            //  //按钮【按钮一】的");
                WriteLiteral(@"回调
                            //                   document.getElementsByTagName('form')[0].submit();
                            //},
                            shade: 0,
                            title: ""编辑楼宇信息"",
                            content: `<form class=""layui-form layui-form-pane"" action="""" onsubmit=""event.preventDefault();editPoiBuilding(this);"" data-guid=${dataGuid}>
                  <div class=""layui-form-item"">
                    <label class=""layui-form-label"">楼宇号码</label>
                    <div class=""layui-input-inline"">
                      <input type=""text"" name=""building_name"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data[""ds""][0][""BUILDING_NUMBER""]}"" required>
                    </div>
                  </div>
<div class=""layui-form-item"">
                    <label class=""layui-form-label"">楼宇名称</label>
                    <div class=""layui-input-inline"">
                      <input type=""text"" name=""building_name");
                WriteLiteral(@""" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data[""ds""][0][""BUILDING_NAME""]}"" required>
                    </div>
                  </div>
                  <div class=""layui-form-item"">
                    <label class=""layui-form-label"">详细地址</label>
                    <div class=""layui-input-inline"">
                      <input type=""text"" name=""building_address"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data[""ds""][0][""BUILDING_ADDRESS""]}"" required>
                    </div>
                  </div>
                <div class=""layui-form-item"">
                <label class=""layui-form-label"">区域</label>
                <div class=""layui-input-block"">
                  <select name=""region"" required>
                            <option value=""` + data[""ds""][0][""REGION""] + `"">` + data[""ds""][0][""REGION""] + `
                  </option></select>
                </div>
              </div>

<div class=");
                WriteLiteral(@"""layui-form-item"">
                <label class=""layui-form-label"">类型</label>
                <div class=""layui-input-block"">
                  <select name=""type"" lay-filter=""aihao"" required>
                    <option value=""地名地址信息;门牌信息;楼栋号"">地名地址信息;门牌信息;楼栋号</option>
                  </select>
                </div>
              </div>


 <button type=""submit"" class=""layui-btn layui-btn-normal fr"">保存</button>


</form>`

                        });
                        //                        var container = document.createElement('div');
                        //                        container.setAttribute(""class"", ""modalSmall"");
                        //                        container.innerHTML += `<div class=""flex sb mb-10""><span class=""bb-lightblue"">编辑楼宇信息</span><button type=""button"" class=""layui-btn layui-btn-normal layui-btn-radius layui-btn-sm"" onclick=""closeModal(this);"">X</button></div><form class=""layui-form layui-form-pane"" action="""" onsubmit=""event.preventDefault()");
                WriteLiteral(@";editPoiBuilding(this);"" data-guid=${dataGuid}>
                        //                  <div class=""layui-form-item"">
                        //                    <label class=""layui-form-label"">楼宇号码</label>
                        //                    <div class=""layui-input-inline"">
                        //                      <input type=""text"" name=""building_name"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data[""ds""][0][""BUILDING_NUMBER""]}"">
                        //                    </div>
                        //                  </div>
                        //<div class=""layui-form-item"">
                        //                    <label class=""layui-form-label"">楼宇名称</label>
                        //                    <div class=""layui-input-inline"">
                        //                      <input type=""text"" name=""building_name"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data");
                WriteLiteral(@"[""ds""][0][""BUILDING_NAME""]}"">
                        //                    </div>
                        //                  </div>
                        //                  <div class=""layui-form-item"">
                        //                    <label class=""layui-form-label"">详细地址</label>
                        //                    <div class=""layui-input-inline"">
                        //                      <input type=""text"" name=""building_address"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data[""ds""][0][""BUILDING_ADDRESS""]}"">
                        //                    </div>
                        //                  </div>
                        //              <div class=""layui-form-item"">
                        //                <label class=""layui-form-label"">区域</label>
                        //                <div class=""layui-input-block"">
                        //                  <select name=""region"" lay-filter=""aihao"" ");
                WriteLiteral(@"id=""selectRegionForm"">
                        //                            <option value=""内蒙古自治区/赤峰市/红山区"">内蒙古自治区/赤峰市/红山区</option>
                        //                            <option value=""内蒙古自治区/赤峰市/元宝山区"">内蒙古自治区/赤峰市/元宝山区</option>
                        //                            <option value=""内蒙古自治区/赤峰市/松山区"">内蒙古自治区/赤峰市/松山区</option>
                        //                            <option value=""内蒙古自治区/赤峰市/阿鲁科尔沁旗"">内蒙古自治区/赤峰市/阿鲁科尔沁旗</option>
                        //                            <option value=""内蒙古自治区/赤峰市/巴林左旗"">内蒙古自治区/赤峰市/巴林左旗</option>
                        //                            <option value=""内蒙古自治区/赤峰市/巴林右旗"">内蒙古自治区/赤峰市/巴林右旗</option>
                        //                            <option value=""内蒙古自治区/赤峰市/林西县"">内蒙古自治区/赤峰市/林西县</option>
                        //                            <option value=""内蒙古自治区/赤峰市/克什克腾旗"">内蒙古自治区/赤峰市/克什克腾旗</option>
                        //                            <option value=""内蒙古自治区/赤峰市/翁牛特旗"">内蒙古自治区/赤峰市/翁牛特旗</o");
                WriteLiteral(@"ption>
                        //                            <option value=""内蒙古自治区/赤峰市/喀喇沁旗"">内蒙古自治区/赤峰市/喀喇沁旗</option>
                        //                            <option value=""内蒙古自治区/赤峰市/宁城县"">内蒙古自治区/赤峰市/宁城县</option>
                        //                            <option value=""内蒙古自治区/赤峰市/敖汉旗"">内蒙古自治区/赤峰市/敖汉旗</option>
                        //                  </select>
                        //                </div>
                        //              </div>

                        //<div class=""layui-form-item"">
                        //                <label class=""layui-form-label"">类型</label>
                        //                <div class=""layui-input-block"">
                        //                  <select name=""type"" lay-filter=""aihao"">
                        //                    <option value=""地名地址信息;门牌信息;楼栋号"">地名地址信息;门牌信息;楼栋号</option>
                        //                  </select>
                        //                </div>
                 ");
                WriteLiteral(@"       //              </div>


                        //<div class=""layui-form-item"">
                        //                    <div class=""layui-input-block"">
                        //                      <button class=""layui-btn layui-btn-normal fr"" lay-submit="""" lay-filter=""demo1"">保存</button>
                        //                    </div>
                        //                  </div>
                        //                  </div>

                        //</form>`;
                        //                        //htmlPoiDetail = `<div class=""modalSmall""><div class=""flex""><span>小区信息</span><button>x</button></div><div><span>小区名称</span><span>${data[""ds""][0][""VILLAGE_NAME""]}</span></div><div><span>详细地址</span><span>${data[""ds""][0][""VILLAGE_ADDRESS""]}</span></div><div><span>区域</span><span>${data[""ds""][0][""VILLAGE_REGION""]}</span></div><div><span>类型</span><span>${data[""ds""][0][""VILLAGE_TYPE""]}</span></div></div>`;
                        //                        document.ge");
                WriteLiteral(@"tElementsByTagName(""body"")[0].appendChild(container);
                        //var building_region = data[""ds""][0][""REGION""];
                        //var selectRegionForm = document.getElementById('selectRegionForm');
                        //if (building_region === '内蒙古自治区/赤峰市/红山区') {
                        //    selectRegionForm.children[0].setAttribute(""selected"", true);
                        //} else if (building_region === '内蒙古自治区/赤峰市/元宝山区') {
                        //    selectRegionForm.children[1].setAttribute(""selected"", true);
                        //} else if (building_region === '内蒙古自治区/赤峰市/松山区') {
                        //    selectRegionForm.children[2].setAttribute(""selected"", true);
                        //} else if (building_region === '内蒙古自治区/赤峰市/阿鲁科尔沁旗') {
                        //    selectRegionForm.children[3].setAttribute(""selected"", true);
                        //} else if (building_region === '内蒙古自治区/赤峰市/巴林左旗') {
                        //    selectRegionFo");
                WriteLiteral(@"rm.children[4].setAttribute(""selected"", true);
                        //} else if (building_region === '内蒙古自治区/赤峰市/巴林右旗') {
                        //    selectRegionForm.children[5].setAttribute(""selected"", true);
                        //} else if (building_region === '内蒙古自治区/赤峰市/林西县') {
                        //    selectRegionForm.children[6].setAttribute(""selected"", true);
                        //} else if (building_region === '内蒙古自治区/赤峰市/克什克腾旗') {
                        //    selectRegionForm.children[7].setAttribute(""selected"", true);
                        //} else if (building_region === '内蒙古自治区/赤峰市/翁牛特旗') {
                        //    selectRegionForm.children[8].setAttribute(""selected"", true);
                        //} else if (building_region === '内蒙古自治区/赤峰市/喀喇沁旗') {
                        //    selectRegionForm.children[9].setAttribute(""selected"", true);
                        //} else if (building_region === '内蒙古自治区/赤峰市/宁城县') {
                        //    selectRegionF");
                WriteLiteral(@"orm.children[10].setAttribute(""selected"", true);
                        //} else if (building_region === '内蒙古自治区/赤峰市/敖汉旗') {
                        //    selectRegionForm.children[11].setAttribute(""selected"", true);
                        //}
                        form.render();
                        //form.on('switch(switch1)', function (data) {
                        //    console.log(polygon);
                        //    if (data.elem.checked) {

                        //    } else {
                        //    }

                        //});

                    },

                    error: function (item, err) {

                        console.log(err);
                    }
                });
            }, 1500);

        }

        function deletePoiFinal(e) {
            var dataGuid = e.getAttribute(""data-guid"");
            $.ajax({
                type: ""post"",
                url: `./API/DeleteVillage?id=${dataGuid}`,
                dataType: ""json");
                WriteLiteral(@""",
                success: function (data) {
                    if (data.length !== 0) {
                        console.log('error');
                    } else {
                        layer.closeAll();
                        layer.msg(""小区已删除"");
                        var index = document.getElementsByTagName(""body"")[0].getAttribute(""data-currentindex"");
                        $('#dg').datagrid('deleteRow', index);

                    }

                },
                error: function (item, err) {
                    console.log(err);
                }
            });
        }

        function deletePoiFinal2(e) {
            var dataGuid = e.getAttribute(""data-guid"");
            $.ajax({
                type: ""post"",
                url: `./API/DeleteBuilding?id=${dataGuid}`,
                dataType: ""json"",
                success: function (data) {
                    if (data.length !== 0) {
                        console.log('error');
                    } el");
                WriteLiteral(@"se {
                        layer.closeAll();
                        layer.msg(""楼宇已删除"");
                        var index = document.getElementsByTagName(""body"")[0].getAttribute(""data-currentindex"");
                        $('#dg2').datagrid('deleteRow', index);
                    }

                },
                error: function (item, err) {
                    console.log(err);
                }
            });
        }

        //function boundsToggle(e) {
        //    console.log('w');
        //    if (e.checked) {
        //        console.log('checked');
        //    } else {
        //        console.log('unchecked');
        //    }
        //}
        function deletePoi(e) {
            setTimeout(function () {
                var dataGuid = e.getAttribute(""data-guid"");
                layer.open({
                    btn: [],
                    //               yes: function(index, layero){
                    //  //按钮【按钮一】的回调
                    //       ");
                WriteLiteral(@"            document.getElementsByTagName('form')[0].submit();
                    //},
                    shade: 0,
                    title: ""删除小区"",
                    content: `<div><div class=""mb-15 tc"">确定删除小区?</div><div class=""tr""><button type=""submit"" class=""layui-btn layui-btn-danger"" data-guid=${dataGuid} onclick=""deletePoiFinal(this);"">删除</button></div></div>`

                });
                //var container = document.createElement('div');
                //container.setAttribute(""class"", ""modalSmall"");
                //container.classList.add(""modalCentered"");
                //container.innerHTML += `<div class=""flex sb mb-10""><span class=""bb-lightblue"">删除小区</span><button type=""button"" class=""layui-btn layui-btn-normal layui-btn-radius layui-btn-sm"" onclick=""closeModal(this);"">X</button></div>
                //            <div class=""mb-15 tc"">确定删除小区?</div><div class=""tr""><button type=""button"" class=""layui-btn layui-btn-danger"" data-guid=${dataGuid} onclick=""deletePoiFinal(this");
                WriteLiteral(@");"">删除</button></div></div>`;
                //document.getElementsByTagName(""body"")[0].appendChild(container);
                //console.log('clicked second');
            }, 1500);

        }


        function deletePoi2(e) {
            setTimeout(function () {
                var dataGuid = e.getAttribute(""data-guid"");
                layer.open({
                    btn: [],
                    //               yes: function(index, layero){
                    //  //按钮【按钮一】的回调
                    //                   document.getElementsByTagName('form')[0].submit();
                    //},
                    shade: 0,
                    title: ""删除楼宇"",
                    content: `<div><div class=""mb-15 tc"">确定删除楼宇?</div><div class=""tr""><button type=""button"" class=""layui-btn layui-btn-danger"" data-guid=${dataGuid} onclick=""deletePoiFinal2(this);"">删除</button></div></div>`

                });
                //var container = document.createElement('div');
                //con");
                WriteLiteral(@"tainer.setAttribute(""class"", ""modalSmall"");
                //container.classList.add(""modalCentered"");
                //container.innerHTML += `<div class=""flex sb mb-10""><span class=""bb-lightblue"">删除楼宇</span><button type=""button"" class=""layui-btn layui-btn-normal layui-btn-radius layui-btn-sm"" onclick=""closeModal(this);"">X</button></div>
                //            <div class=""mb-15 tc"">确定删除楼宇?</div><div class=""tr""><button type=""button"" class=""layui-btn layui-btn-danger"" data-guid=${dataGuid} onclick=""deletePoiFinal2(this);"">删除</button></div></div>`;
                //document.getElementsByTagName(""body"")[0].appendChild(container);
            }, 1500);

        }

        function searchVillage(e) {
            var textSearch = e.previousSibling.value;
            var province = $(""#selectProvince"").find(""option:selected"").text();
            var city = $(""#selectCity"").find(""option:selected"").text();
            var county = $(""#selectCounty"").find(""option:selected"").text();
            v");
                WriteLiteral(@"ar region = province + ""/"" + city + ""/"" + county;

            if (province !== ""所有"" && city !== ""所有"" && county !== ""所有"") {
                map.clearMap();
                $(""#dg"").datagrid({
                    url: `./API/SearchByRegion?text=${textSearch}&region=${region}`,
                    method: 'get',
                    onLoadSuccess: function (data) {
                        document.getElementsByClassName('datagrid-row')[0].click();
                    }
                });
            } else if (province !== ""所有"" && city !== ""所有"" && county === ""所有"") {
                map.clearMap();
                $(""#dg"").datagrid({
                    url: `./api/SearchByCity?text=${textSearch}&city=${city}`,
                    method: 'get',
                    onLoadSuccess: function (data) {
                        document.getElementsByClassName('datagrid-row')[0].click();
                    }
                });
            }
        }
        //$.ajax({
        //    type: ""get"",");
                WriteLiteral(@"
        //    url: `./API/SearchVillageByCity?text=${textSearch}&city=${city}`,
        //    contentType: ""application/json; charset=utf-8"",
        //    dataType: ""json"",
        //    success: function (data) {
        //        var xq = data[""ds""];
        //        var rowsXQ = [];
        //        xq.forEach(function (XQ) {


        //            var hasBounds = ""无"";
        //            if (XQ[""VILLAGE_BOUNDS""] !== null) {
        //                hasBounds = ""有"";
        //            }
        //            rowsXQ.push({ village_name: XQ[""VILLAGE_NAME""], village_address: XQ[""VILLAGE_ADDRESS""], village_region: XQ[""VILLAGE_REGION""], village_type: XQ[""VILLAGE_TYPE""], village_count: XQ[""VILLAGE_COUNT""], village_hasBounds: hasBounds, village_action: `<i class=""fa fa-eye mr-5"" data-lng=""${XQ[""VILLAGE_LNG""]}"" data-lat=""${XQ[""VILLAGE_LAT""]}"" data-bounds=""${XQ[""VILLAGE_BOUNDS""]}"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""getPoiDetail(this);""></i><i class=""fa fa-edit mr-5"" data-guid=""${XQ[""V");
                WriteLiteral(@"ILLAGE_ID""]}"" onclick=""editPoi(this);""></i><i class=""fa fa-trash-o"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""deletePoi(this);""></i>`, village_lng: XQ[""VILLAGE_LNG""], village_lat: XQ[""VILLAGE_LAT""] });
        //        });
        //        $('#dg').datagrid('loadData', getData(rowsXQ));
        //    },
        //    error: function (item, err) {
        //        console.log(err);
        //    }
        //});
        //$.ajax({
        //    type: ""get"",
        //    url: `./API/SearchVillage?text=${textSearch}&region=${region}`,
        //    contentType: ""application/json; charset=utf-8"",
        //    dataType: ""json"",
        //    success: function (data) {
        //        var xq = data[""ds""];
        //        var rowsXQ = [];
        //        xq.forEach(function (XQ) {

        //            var hasBounds = ""无"";
        //            if (XQ[""VILLAGE_BOUNDS""] !== null) {
        //                hasBounds = ""有"";
        //            }
        //            rowsXQ.push({ vi");
                WriteLiteral(@"llage_name: XQ[""VILLAGE_NAME""], village_address: XQ[""VILLAGE_ADDRESS""], village_region: XQ[""VILLAGE_REGION""], village_type: XQ[""VILLAGE_TYPE""], village_count: XQ[""VILLAGE_COUNT""], village_hasBounds: hasBounds, village_action: `<i class=""fa fa-eye mr-5"" data-lng=""${XQ[""VILLAGE_LNG""]}"" data-lat=""${XQ[""VILLAGE_LAT""]}"" data-bounds=""${XQ[""VILLAGE_BOUNDS""]}"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""getPoiDetail(this);""></i><i class=""fa fa-edit mr-5"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""editPoi(this);""></i><i class=""fa fa-trash-o"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""deletePoi(this);""></i>`, village_lng: XQ[""VILLAGE_LNG""], village_lat: XQ[""VILLAGE_LAT""] });
        //        });
        //        $('#dg').datagrid('loadData', getData(rowsXQ));
        //    },
        //    error: function (item, err) {
        //        console.log(err);
        //    }
        //});
        function searchBuilding(e) {
            var textSearch = e.previousSibling.value;
            var province = $(""#selectProv");
                WriteLiteral(@"ince"").find(""option:selected"").text();
            var city = $(""#selectCity"").find(""option:selected"").text();
            var county = $(""#selectCounty"").find(""option:selected"").text();
            var region = province + ""/"" + city + ""/"" + county;
            if (province !== ""所有"" && city !== ""所有"" && county !== ""所有"") {
                map.clearMap();
                $(""#dg2"").datagrid({
                    url: `./API/SearchByRegionBuildings?text=${textSearch}&region=${region}`,
                    method: 'get',
                    onLoadSuccess: function (data) {
                    }
                });
            } else if (province !== ""所有"" && city !== ""所有"" && county === ""所有"") {
                map.clearMap();
                $(""#dg2"").datagrid({
                    url: `./API/SearchByCityBuildings?text=${textSearch}&city=${city}`,
                    method: 'get',
                    onLoadSuccess: function (data) {
                    }
                });
            }

    ");
                WriteLiteral(@"        //var textSearch = e.previousSibling.value;
            ////if (textSearch.length === 0) {
            ////    layer.msg(""搜索内容不能为空"");
            ////} else {
            //var province = $(""#selectProvince"").find(""option:selected"").text();
            //var city = $(""#selectCity"").find(""option:selected"").text();
            //var county = $(""#selectCounty"").find(""option:selected"").text();
            //var region = province + ""/"" + city + ""/"" + county;
            //if (province !== ""所有"" && city !== ""所有"" && county === ""所有"") {
            //    $.ajax({
            //        type: ""get"",
            //        url: `./API/SearchBuildingByCity?text=${textSearch}&city=${city}`,
            //        contentType: ""application/json; charset=utf-8"",
            //        dataType: ""json"",
            //        success: function (data) {
            //            var l = data[""ds""];
            //            var rowsL = [];
            //            l.forEach(function (L) {
            //  ");
                WriteLiteral(@"              rowsL.push({ building_name: L[""BUILDING_NAME""], building_address: L[""BUILDING_ADDRESS""], building_action: `<i class=\""fa fa-eye mr-5 \"" data-lng=""${L[""LNG""]}"" data-lat=""${L[""LAT""]}"" data-bounds=""${L[""BOUNDS""]}"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""getPoiDetail2(this);""></i><i class=\""fa fa-edit mr-5 \"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""editPoi2(this);""></i><i class=\""fa fa-trash-o \"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""deletePoi2(this);""></i>` });
            //            });
            //            $('#dg2').datagrid('loadData', getData(rowsL));
            //        },
            //        error: function (item, err) {
            //            console.log(err);
            //        }
            //    });
            //} else {
            //    $.ajax({
            //        type: ""get"",
            //        url: `./API/SearchBuilding?text=${textSearch}&region=${region}`,
            //        contentType: ""application/json; charset=utf-8"",
            //  ");
                WriteLiteral(@"      dataType: ""json"",
            //        success: function (data) {
            //            var l = data[""ds""];
            //            var rowsL = [];
            //            l.forEach(function (L) {
            //                rowsL.push({ building_name: L[""BUILDING_NAME""], building_address: L[""BUILDING_ADDRESS""], building_action: `<i class=\""fa fa-eye mr-5 \"" data-lng=""${L[""LNG""]}"" data-lat=""${L[""LAT""]}"" data-bounds=""${L[""BOUNDS""]}"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""getPoiDetail2(this);""></i><i class=\""fa fa-edit mr-5 \"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""editPoi2(this);""></i><i class=\""fa fa-trash-o \"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""deletePoi2(this);""></i>` });
            //            });
            //            $('#dg2').datagrid('loadData', getData(rowsL));
            //        },
            //        error: function (item, err) {
            //            console.log(err);
            //        }
            //    });
            //    // }
      ");
                WriteLiteral(@"      //}

        }

        function openPois(e) {
            e.classList.remove(""layui-btn-primary"");
            e.classList.add(""layui-btn-normal"");
            e.innerHTML += `<i class=""fa fa-check ml-3px""></i>`;
            e.setAttribute(""disabled"", true);
            var sibling = e.nextSibling;
            sibling.classList.remove(""layui-btn-normal"");
            sibling.classList.add(""layui-btn-primary"");
            sibling.innerHTML = `否`;
            sibling.removeAttribute(""disabled"");
            var overlays = map.getAllOverlays(""polygon"");
            overlays.forEach(function (overlay) {
                overlay.show();
            });
        }

        function closePois(e) {
            e.classList.remove(""layui-btn-primary"");
            e.classList.add(""layui-btn-normal"");
            e.innerHTML += `<i class=""fa fa-check ml-3px""></i>`;
            e.setAttribute(""disabled"", true);
            var sibling = e.previousSibling;
            sibling.classList.remo");
                WriteLiteral(@"ve(""layui-btn-normal"");
            sibling.classList.add(""layui-btn-primary"");
            sibling.innerHTML = `是`;
            sibling.removeAttribute(""disabled"");
            var overlays = map.getAllOverlays(""polygon"");
            overlays.forEach(function (overlay) {
                overlay.hide();
            });

        }

        function closeModal(e) {
            e.parentElement.parentElement.remove();
            mousetool.close(true);
            //$.ajax({
            //    type: ""get"",
            //    url: `./API/DetailsVillage?id=${dataGuid}`,
            //    contentType: ""application/json; charset=utf-8"",
            //    dataType: ""json"",
            //    success: function (data) {
            //        var container = document.createElement('div');
            //        container.setAttribute(""class"", ""modalSmall"");
            //        container.innerHTML += `<div class=""flex sb mb-10""><span class=""bb-lightblue"">小区信息</span><button type=""button"" class=""layui-b");
                WriteLiteral(@"tn layui-btn-normal layui-btn-radius layui-btn-sm"" onclick=""closeModal(this);"">X</button></div><div class=""mb-10""><span class=""mr-5 bold"">小区名称:</span><span>${data[""ds""][0][""VILLAGE_NAME""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">详细地址:</span><span>${data[""ds""][0][""VILLAGE_ADDRESS""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">区域:</span><span>${data[""ds""][0][""VILLAGE_REGION""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">类型:</span><span>${data[""ds""][0][""VILLAGE_TYPE""]}</span></div>`;
            //        //htmlPoiDetail = `<div class=""modalSmall""><div class=""flex""><span>小区信息</span><button>x</button></div><div><span>小区名称</span><span>${data[""ds""][0][""VILLAGE_NAME""]}</span></div><div><span>详细地址</span><span>${data[""ds""][0][""VILLAGE_ADDRESS""]}</span></div><div><span>区域</span><span>${data[""ds""][0][""VILLAGE_REGION""]}</span></div><div><span>类型</span><span>${data[""ds""][0][""VILLAGE_TYPE""]}</span></div></div>`;
            //        document.getElementsByTagName(""body"")[0].appendC");
                WriteLiteral(@"hild(container);
            //    },
            //    error: function (item, err) {
            //        console.log(err);
            //    }
            //});
        }




        ///////
        //dropdown
        var d = """";
        $.ajax({
            type: ""get"",
            url: `./region.json`,
            contentType: ""application/json; charset=utf-8"",
            dataType: ""json"",
            success: function (data) {
                d = data;
                //var selectProvince = `<select><option>请选择省份</option>`;
                var selectProvince = ``;
                d.forEach(function (item) {
                    if (item[""item_code""].slice(2) === '0000') {
                        selectProvince += `<option value=${item[""item_code""]}>${item[""item_name""]}</option>`;
                    }
                });
                //selectProvince += `</select>`;
                var selectP = document.getElementById('selectProvince');
                var selectC = doc");
                WriteLiteral(@"ument.getElementById('selectCity');
                var selectCT = document.getElementById('selectCounty');
                selectP.innerHTML += selectProvince;
                selectP.addEventListener('change', function (e) {
                    var value = e.target.value;
                    if (value !== """") {
                        selectC.innerHTML = `<option value="""">所有</option>`;
                        d.forEach(function (i) {

                            if ((i[""item_code""].slice(0, 2) === value.slice(0, 2)) && (i[""item_code""].slice(2) !== ""0000"") && (i[""item_code""].slice(4, 6) === ""00"")) {

                                selectC.innerHTML += `<option value=${i[""item_code""]}>${i[""item_name""]}</option>`;
                            }
                        });
                    }
                });
                selectC.addEventListener('change', function (e) {
                    var value = e.target.value;
                    if (value !== """") {
                        sel");
                WriteLiteral(@"ectCT.innerHTML = `<option value="""">所有</option>`;
                        d.forEach(function (i2) {


                            if (value == '110100' || value == ""120100"" || value == ""310100"" || value == ""500100"") {
                                if (value.slice(0, 3) === (i2[""item_code""].slice(0, 3)) && (i2[""item_code""].slice(4, 6) !== ""00"")) {
                                    selectCT.innerHTML += `<option value=${i2[""item_code""]}>${i2[""item_name""]}</option>`;
                                }
                            } else {
                                if (value.slice(0, 4) === (i2[""item_code""].slice(0, 4)) && (i2[""item_code""].slice(4, 6) !== ""00"")) {
                                    selectCT.innerHTML += `<option value=${i2[""item_code""]}>${i2[""item_name""]}</option>`;
                                }
                            }
                        });
                        // get data for current city and display on map
                        var city = $(""#selectC");
                WriteLiteral(@"ity"").find(""option:selected"").text();
                        // setTimeout(function(){
                        //    document.getElementsByClassName('datagrid-row')[0].click();
                        //}, 5000);
                        $(""#dg"").datagrid({
                            url: `./api/IndexByCity?city=${city}`,
                            method: 'get',
                            onLoadSuccess: function (data) {
                                document.getElementsByClassName('datagrid-row')[0].click();
                            }
                        });
                        // by default click on first row




                    }


                });

                selectCT.addEventListener('change', function (e) {
                    var value = e.target.value;
                    if (value !== """") {
                        map.clearMap();
                        var province = $(""#selectProvince"").find(""option:selected"").text();
                        va");
                WriteLiteral(@"r city = $(""#selectCity"").find(""option:selected"").text();
                        var county = $(""#selectCounty"").find(""option:selected"").text();
                        var region = province + ""/"" + city + ""/"" + county;
                        $(""#dg"").datagrid({
                            url: `./API/IndexByRegion?region=${region}`,
                            method: 'get',
                            onLoadSuccess: function (data) {
                                document.getElementsByClassName('datagrid-row')[0].click();
                            }
                        });

                        //$.ajax({
                        //    type: ""get"",
                        //    url: `https://restapi.amap.com/v3/geocode/geo?key=c7aeb11746b35a92b7b6eee3178a05e4&address=${county}&city=`,
                        //    contentType: ""application/json; charset=utf-8"",
                        //    dataType: ""json"",
                        //    success: function (data) {
              ");
                WriteLiteral(@"          //        var lnglat = data[""geocodes""][0][""location""];
                        //        lng = Number(lnglat.split("","")[0]);
                        //        lat = Number(lnglat.split("","")[1]);
                        //        map.setCenter([lng, lat]);
                        //        map.setZoom(17);

                        //    },
                        //    error: function () {
                        //        console.log('error');
                        //    }
                        //});
                        //$.ajax({
                        //    type: ""get"",
                        //    url: `./API/IndexByRegion?region=${region}`,
                        //    contentType: ""application/json; charset=utf-8"",
                        //    dataType: ""json"",
                        //    success: function (data) {
                        //        console.log(data);
                        //        var xq = data[0][""ds""];
                        //        var");
                WriteLiteral(@" l = data[1][""ds""];
                        //        var lFirst = data[2][""ds""];
                        //        var rowsXQ = [];
                        //        var rowsL = [];
                        //        xq.forEach(function (XQ) {
                        //            if (XQ[""VILLAGE_BOUNDS""] !== ""null"") {
                        //                var polygon = new AMap.Polygon({
                        //                    strokeColor: ""#2828FF"",
                        //                    fillOpacity: 0,
                        //                    bubble: true,
                        //                    strokeWeight: 1,
                        //                    path: JSON.parse(XQ[""VILLAGE_BOUNDS""]),
                        //                    map: map
                        //                });

                        //                var polylineEditor = new AMap.PolyEditor(map, polygon);
                        //                polygon.setExtData({ ""editor""");
                WriteLiteral(@": polylineEditor });


                        //            }
                        //            var hasBounds = ""无"";
                        //            if (XQ[""VILLAGE_BOUNDS""] !== null) {
                        //                hasBounds = ""有"";
                        //            }
                        //            rowsXQ.push({ village_name: XQ[""VILLAGE_NAME""], village_address: XQ[""VILLAGE_ADDRESS""], village_region: XQ[""VILLAGE_REGION""], village_type: XQ[""VILLAGE_TYPE""], village_count: XQ[""VILLAGE_COUNT""], village_hasBounds: hasBounds, village_action: `<i class=""fa fa-eye mr-5"" data-lng=""${XQ[""VILLAGE_LNG""]}"" data-lat=""${XQ[""VILLAGE_LAT""]}"" data-bounds=""${XQ[""VILLAGE_BOUNDS""]}"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""getPoiDetail(this);""></i><i class=""fa fa-edit mr-5"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""editPoi(this);""></i><i class=""fa fa-trash-o"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""deletePoi(this);""></i>`, village_lng: XQ[""VILLAGE_LNG""], village_lat: XQ[""VILLAGE_LAT""] });");
                WriteLiteral(@"

                        //        });


                        //        l.forEach(function (L) {
                        //            var icon = new AMap.Icon({
                        //                size: new AMap.Size(15, 15),
                        //                image: './icons/circle.png',  // Icon的图像
                        //                imageSize: new AMap.Size(15, 15)
                        //            });
                        //            var marker = new AMap.Marker({
                        //                position: new AMap.LngLat(L[""LNG""], L[""LAT""]),   // 经纬度对象，也可以是经纬度构成的一维数组[116.39, 39.9]
                        //                title: L[""BUILDING_NAME""],
                        //                icon: icon // 添加 Icon 图标 URL
                        //            });
                        //            map.add(marker);


                        //        });
                        //        lFirst.forEach(function (L) {
                        // ");
                WriteLiteral(@"           rowsL.push({ building_name: L[""BUILDING_NAME""], building_address: L[""BUILDING_ADDRESS""], building_action: `<i class=\""fa fa-eye mr-5 \"" data-lng=""${L[""LNG""]}"" data-lat=""${L[""LAT""]}"" data-bounds=""${L[""BOUNDS""]}"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""getPoiDetail2(this);""></i><i class=\""fa fa-edit mr-5 \"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""editPoi2(this);""></i><i class=\""fa fa-trash-o \"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""deletePoi2(this);""></i>` });
                        //        });
                        //        $('#dg').datagrid('loadData', getData(rowsXQ));
                        //        $('#dg2').datagrid('loadData', getData(rowsL));

                        //    },
                        //    error: function (item, err) {
                        //        console.log(err);
                        //    }
                        //});
                    } else {
                        var city = $(""#selectCity"").find(""option:selected"").text();
          ");
                WriteLiteral(@"              $(""#dg"").datagrid({
                            url: `./api/IndexByCity?city=${city}`,
                            method: 'get',
                            onLoadSuccess: function (data) {
                                document.getElementsByClassName('datagrid-row')[0].click();
                            }
                        });


                        //map.clearMap();
                        //var city = $(""#selectCity"").find(""option:selected"").text();
                        //$.ajax({
                        //    type: ""get"",
                        //    url: `https://restapi.amap.com/v3/geocode/geo?key=c7aeb11746b35a92b7b6eee3178a05e4&address=${city}&city=`,
                        //    contentType: ""application/json; charset=utf-8"",
                        //    dataType: ""json"",
                        //    success: function (data) {
                        //        var lnglat = data[""geocodes""][0][""location""];
                        //        lng = Num");
                WriteLiteral(@"ber(lnglat.split("","")[0]);
                        //        lat = Number(lnglat.split("","")[1]);
                        //        map.setCenter([lng, lat]);
                        //        map.setZoom(17);

                        //    },
                        //    error: function () {
                        //        console.log('error');
                        //    }
                        //});
                        //$.ajax({
                        //    type: ""get"",
                        //    url: `./api/IndexByCity?city=${city}`,
                        //    contentType: ""application/json; charset=utf-8"",
                        //    dataType: ""json"",
                        //    success: function (data) {


                        //        var xq = data[0][""ds""];
                        //        var l = data[1][""ds""];
                        //        var lFirst = data[2][""ds""];
                        //        var rowsXQ = [];
                        //    ");
                WriteLiteral(@"    var rowsL = [];
                        //        xq.forEach(function (XQ) {
                        //            if (XQ[""VILLAGE_BOUNDS""] !== ""null"") {
                        //                var polygon = new AMap.Polygon({
                        //                    strokeColor: ""#2828FF"",
                        //                    fillOpacity: 0,
                        //                    bubble: true,
                        //                    strokeWeight: 1,
                        //                    path: JSON.parse(XQ[""VILLAGE_BOUNDS""]),
                        //                    map: map
                        //                });

                        //                var polylineEditor = new AMap.PolyEditor(map, polygon);
                        //                polygon.setExtData({ ""editor"": polylineEditor });


                        //            }
                        //            var hasBounds = ""无"";
                        //            i");
                WriteLiteral(@"f (XQ[""VILLAGE_BOUNDS""] !== null) {
                        //                hasBounds = ""有"";
                        //            }
                        //            rowsXQ.push({ village_name: XQ[""VILLAGE_NAME""], village_address: XQ[""VILLAGE_ADDRESS""], village_region: XQ[""VILLAGE_REGION""], village_type: XQ[""VILLAGE_TYPE""], village_count: XQ[""VILLAGE_COUNT""], village_hasBounds: hasBounds, village_action: `<i class=""fa fa-eye mr-5"" data-lng=""${XQ[""VILLAGE_LNG""]}"" data-lat=""${XQ[""VILLAGE_LAT""]}"" data-bounds=""${XQ[""VILLAGE_BOUNDS""]}"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""getPoiDetail(this);""></i><i class=""fa fa-edit mr-5"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""editPoi(this);""></i><i class=""fa fa-trash-o"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""deletePoi(this);""></i>`, village_lng: XQ[""VILLAGE_LNG""], village_lat: XQ[""VILLAGE_LAT""] });

                        //        });


                        //        l.forEach(function (L) {
                        //            var icon = new AMap.I");
                WriteLiteral(@"con({
                        //                size: new AMap.Size(15, 15),
                        //                image: './icons/circle.png',  // Icon的图像
                        //                imageSize: new AMap.Size(15, 15)
                        //            });
                        //            var marker = new AMap.Marker({
                        //                position: new AMap.LngLat(L[""LNG""], L[""LAT""]),   // 经纬度对象，也可以是经纬度构成的一维数组[116.39, 39.9]
                        //                title: L[""BUILDING_NAME""],
                        //                icon: icon // 添加 Icon 图标 URL
                        //            });
                        //            map.add(marker);


                        //        });
                        //        lFirst.forEach(function (L) {
                        //            rowsL.push({ building_name: L[""BUILDING_NAME""], building_address: L[""BUILDING_ADDRESS""], building_action: `<i class=\""fa fa-eye mr-5 \"" data-lng=""${L[""LNG""");
                WriteLiteral(@"]}"" data-lat=""${L[""LAT""]}"" data-bounds=""${L[""BOUNDS""]}"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""getPoiDetail2(this);""></i><i class=\""fa fa-edit mr-5 \"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""editPoi2(this);""></i><i class=\""fa fa-trash-o \"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""deletePoi2(this);""></i>` });
                        //        });
                        //        $('#dg').datagrid('loadData', getData(rowsXQ));
                        //        $('#dg2').datagrid('loadData', getData(rowsL));
                        //    },
                        //    error: function (item, err) {
                        //        console.log(err);
                        //    }
                        //});
                    }
                })
            },
            error: function (item, err) {
                console.log(err);
            }
        });




        // createTables();
        setTimeout(function () {
            document.getElementsByClassName('panel-body-no");
                WriteLiteral(@"header')[0].classList.add(""w-100p"");
            var container = document.createElement('div');
            container.setAttribute(""id"", ""buttonOpenClose"");
            container.innerHTML += `<span class=""bb-lightblue pb-5px mr-20"">是否显示小区边界</span><button type=""button"" class=""layui-btn layui-btn-radius layui-btn-normal layui-btn-sm"" onclick=""openPois(this);"" disabled>是 <i class=""fa fa-check ml-3px""></i></button><button type=""button"" class=""layui-btn layui-btn-primary layui-btn-radius layui-btn-sm"" onclick=""closePois(this);"">否</button>`;
            document.getElementsByClassName('panel')[1].appendChild(container);
        }, 5000)
    </script>
    ");
                EndContext();
                BeginContext(128834, 83, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "244fa063bf0ab74d4f28bf9558aa6d2a8021abbc165530", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(128917, 6, true);
                WriteLiteral("\r\n\r\n\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(128930, 11, true);
            WriteLiteral("\r\n</html>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
